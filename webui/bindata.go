// Code generated by go-bindata. DO NOT EDIT.
// sources:
// dist/api.js
// dist/app.js
// dist/browsefs.js
// dist/domhelper.js
// dist/format.js
// dist/index.html
// dist/loglevel.js
// dist/logview.js
// dist/nav.js
// dist/styles.css

package webui

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _apiJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\x5d\x8f\x9b\x46\x14\x7d\xe7\x57\xdc\x6c\x91\x18\x24\x84\xfb\x1c\x44\xa5\x26\x4a\xa5\xb6\x51\x53\x6d\x94\xa7\x95\x55\x26\xcc\xc5\x9e\x18\x66\x46\x77\x86\xf5\x5a\xec\xfc\xf7\x6a\x00\x63\xe3\x5d\xad\xf2\x64\x01\x67\xce\xc7\xe5\x5c\x2c\x3b\xa3\xc9\xc1\x10\x7b\x68\x48\x77\x90\xe4\x1b\xa1\xbb\x3d\xb6\x06\x29\xff\x61\x93\x22\x8a\x5a\x74\xc0\x8d\x34\x84\x8d\x7c\x82\x12\xaa\x78\x38\x4a\x25\xf4\x31\x17\xba\xee\x3b\x54\x2e\x6f\x75\xcd\x9d\xd4\x2a\xd7\x24\x77\x52\xf9\x4d\x55\x44\x8c\xa5\x50\xfe\x06\x43\x04\x50\x6b\x65\xaf\x38\xfe\x93\xca\xf4\x0e\x4a\x88\xd9\xdd\x2f\xcb\xdd\xbb\xb4\x88\xe0\x16\x94\x3f\xf2\xb6\x47\x28\x2f\xf7\x5f\x03\x71\x21\x3e\x3d\xa2\x72\x9f\xa5\x75\xa8\x90\xd8\x5d\xbd\xe7\x6a\x87\x77\x19\xe0\xe3\xd9\x04\xac\x42\xe0\xe3\x44\x1d\xe8\x7c\x5a\x44\x3e\x65\x69\x11\x45\x93\x53\x43\xda\xf0\x1d\x77\xf8\x37\x9e\x2c\x94\xf0\x90\x74\xe8\xf6\x5a\x24\xdb\x62\x46\x90\xa9\x83\x29\x7b\x52\x35\x30\x54\xc2\x68\xa9\x5c\x06\xda\xb8\x80\x1f\xfc\x4d\xf4\x9e\x5a\x28\x41\xe1\x11\xbe\xdd\x7f\xbe\xc2\x2f\x8e\xc6\xec\xf3\x98\x68\x17\x38\x02\xd5\x43\x12\x2e\x92\x2d\x3c\x3f\xc3\xe0\x03\xa4\xd1\x04\x2c\xbc\x90\x03\x48\x35\x42\xd3\x39\x5c\x4f\x6d\x6e\x91\x53\xbd\xff\x97\x13\xef\x6c\x6e\xd1\xb1\x43\x36\x62\x1e\x0e\xdb\x51\xc0\x47\x8b\x4a\x83\xae\xde\x7f\x99\xed\x76\x5a\xe0\x7b\x48\x6a\x4d\x36\xc9\xa0\xe6\xf5\x3e\x5c\x12\xb6\x9a\x8b\xc4\xaf\x65\x75\xb3\x1e\xcf\x59\x5f\x36\xc0\x46\xcf\x87\x2d\xbc\x2b\x4b\xe8\x95\xc0\x46\x2a\x14\xe9\xf8\x18\x2e\x8a\x01\x31\xe7\x3b\x6c\x27\x5b\x57\xc7\x93\xef\x5a\x9c\x92\x5b\x8e\x59\x64\xf2\xfe\xc3\x6a\xf5\xd5\x11\x94\xf0\xd7\xd7\x2f\xff\xe4\xd6\x91\x54\x3b\xd9\x9c\x56\x04\x63\xe0\x2b\xd5\x3c\xdc\x9e\x5f\xc2\x87\x56\x7f\x67\x0f\x33\xcd\x36\x83\xc1\x9d\x4c\x48\xcc\x8d\x69\xe5\xd4\xe4\x4d\x78\x9a\xf8\xf4\xa5\x3f\xe2\xc7\x0f\x6f\x58\x7c\x21\x78\x73\xaa\x80\xf5\x8b\x20\xb4\x46\x2b\x3b\x76\xfc\xc8\xa5\x83\x79\xb7\x46\x1e\xd6\x53\x9b\x5d\x28\x47\x37\xc1\xc9\xbb\xf3\xa9\x5c\x1f\xce\xc2\x6e\x4f\xfa\x38\xc6\xfb\x44\xa4\x89\x55\xe3\x31\x68\xb8\x6c\x51\xbc\x87\x78\x58\xce\x58\xc7\x5d\x6f\x7d\xb5\x84\x23\x74\x3d\xa9\x59\x7f\x81\x85\x09\x84\xa5\xf0\xcb\x5e\x34\xb2\x6d\xef\xb1\xd3\x0e\x3f\x6a\xe5\x50\xb9\xd7\x76\x60\x2a\x74\x36\x82\xa7\x82\xac\x56\x81\xd0\xf6\xad\x5b\xd2\x92\xa9\x97\xb3\x61\x01\xa7\x7c\xbf\x13\xf1\x53\x2e\xed\xf8\xcb\x16\xa6\x65\xc6\xab\x3a\x5e\x84\x86\xb9\x6a\x31\xab\xe2\x61\xf2\xe1\xe3\xe1\xe0\xab\x34\x77\xf8\xe4\x2e\xa6\x27\x13\xa1\x88\xcf\xcf\xf0\xeb\xd4\x94\x30\x08\x0f\xd8\x5a\x7c\xa9\x22\xd5\x2b\x2a\x53\x9e\x40\x77\x7e\x36\x13\x32\x1e\x22\xf3\xb9\x81\x3f\x61\xc7\xb1\xb5\xa1\xf4\xca\xd1\xd5\xf8\x85\x3e\xaa\xb0\x92\x7f\xc8\x36\xd4\x85\x49\x31\x4e\x19\x15\xef\xf0\xcd\x0f\x4e\x15\x50\x9b\x78\x90\xc2\x6f\xe2\x01\x55\xad\x05\x7e\xbb\xff\xf3\xa3\xee\x8c\x56\xa8\x1c\x5b\x58\x7c\x75\xfb\x51\x9a\xeb\x78\xfe\xc2\x43\x19\xb8\x8b\xc8\x47\x11\x3e\x4d\x7f\x1d\x64\xea\xec\x65\x35\xb2\x95\x5d\x5f\x44\xff\x07\x00\x00\xff\xff\x11\x4b\x8c\x25\x6a\x06\x00\x00")

func apiJsBytes() ([]byte, error) {
	return bindataRead(
		_apiJs,
		"api.js",
	)
}

func apiJs() (*asset, error) {
	bytes, err := apiJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api.js", size: 1642, mode: os.FileMode(420), modTime: time.Unix(1529144697, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x83, 0x5d, 0x82, 0x40, 0x56, 0x8e, 0xb9, 0xe6, 0xbb, 0x9a, 0xc6, 0xa0, 0x87, 0x58, 0x15, 0x6f, 0xc2, 0x4, 0x71, 0x9c, 0x50, 0x20, 0x80, 0xb8, 0x2c, 0x1c, 0x85, 0x87, 0xd7, 0x2f, 0xfe, 0xc1}}
	return a, nil
}

var _appJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x54\x4d\x6f\x9c\x30\x10\xbd\xf3\x2b\xa6\x9b\x83\x41\x22\x4b\xaa\xde\xb2\x4a\x2f\x51\x0f\x95\x7a\xa8\x92\xf6\x54\x55\xc8\x6b\x06\xd6\x8d\xed\x41\xf6\xc0\x76\x15\xed\x7f\xaf\x0c\xcb\x7e\xe6\x50\xa9\x91\x52\x0e\x78\x3c\xf3\xfc\x8c\xe7\x3d\xac\x6d\x4b\x9e\xe1\x59\x91\x63\x74\xfc\x88\x8a\x35\xb9\x1c\x74\xd8\x85\x8f\x68\x50\x31\x56\x5b\xa8\x3d\x59\x10\xf3\xc2\xc9\x7e\xfe\x2b\x88\x45\x32\xad\xad\xb5\x31\x0f\x68\x89\xf1\x7e\x64\x39\x60\x65\xab\xcf\xb0\xe4\xad\xe4\x6f\xda\x62\x60\x69\xdb\x87\xaf\xf7\x07\xf0\x58\x3b\xc1\x8b\x79\xb1\xf4\xb4\x0e\x58\x87\xf3\xbc\xa1\xa6\xd7\xb8\x7e\x21\x6d\xb0\x47\x33\xe6\x13\x45\x2e\x30\x74\x6d\x25\x19\x3f\x3b\x46\xdf\x4b\x03\x77\xf0\xe1\xe6\xe6\x66\x91\x24\x69\x9a\xc1\xdd\x47\x78\x4e\x00\x46\x20\x7b\xdd\x34\xe8\xbf\x0f\x78\xb8\x03\x19\x36\x4e\xc1\x01\x05\xa0\x6b\x48\xdf\x5d\x74\x27\x15\xda\x51\x85\xd5\x32\xb0\xe4\x20\xb2\x6c\xc0\x02\x78\xe4\xce\xbb\x45\x32\x4c\xd9\x6f\x76\x24\x00\x72\x2d\x35\xc3\x45\xe7\x52\x21\x5b\x5d\xf4\xef\x8b\x1d\x5d\x31\xf2\xe5\x20\xae\x8e\x37\xb8\x16\xf9\x9e\x29\x3e\xc2\xc8\xc0\x65\xfc\x56\x71\x0b\x97\x2d\xce\x2f\xa0\xfc\xfb\x2f\x81\xba\x12\xb7\xe0\x3a\x63\x4e\x4a\x3d\xfa\xa0\xc9\xbd\x54\x1a\xe9\xb5\x7a\x42\x7e\xa9\xec\x3a\xbb\x44\x5f\x52\x5d\xc6\xe3\x94\x86\xd4\x53\x38\xc3\x6d\xb3\xc5\x10\x6d\x41\x49\x56\x2b\x48\x31\xdb\x1f\x36\xaa\x44\x06\xe7\x86\x9a\x14\x27\xdc\xf0\x5e\x6b\x57\xd1\x7a\x1e\x70\x38\x10\x75\x9c\x9e\x68\x99\x9f\x79\x60\x58\xbb\x1d\x75\x3f\x32\xfe\xb9\x8e\x73\x59\x55\x9f\x7a\x74\xfc\x45\x07\x46\x87\x3e\x15\x61\x45\x6b\x27\x72\xc0\x83\x27\x4e\x76\x4a\x47\xea\x6c\x91\x6c\xb3\x18\xbf\xa6\xc9\x96\x86\x96\x81\xc9\xe3\x2b\x38\x6c\xcf\x55\x28\x72\xb5\x6e\x06\x93\xed\x93\xd1\x61\x3f\x8e\x85\x5b\x4a\xf5\x84\xae\x2a\xb5\x6d\x4d\xe9\xa4\xc5\x88\x9f\x92\xb5\x91\x4d\x10\x27\x42\x2b\xa9\x56\x78\x8a\x1e\x53\x23\xf6\xe7\x9b\x8a\x7c\xd4\xc7\xff\x4c\xe1\x80\xcc\xda\x35\xff\x72\x85\xcc\x76\x02\x87\x4d\x60\xb4\x85\x76\x35\xcd\x72\x98\x5d\x4d\xd4\xd7\xb3\x33\x69\x1b\x2a\xa7\x1f\x3a\x07\x41\xc3\x75\x23\xbd\x5a\xc5\xd1\x75\xb6\x6c\xc8\x53\xc7\xda\x0d\x22\xae\x28\xf0\x24\x68\xab\xab\x38\x74\x71\x38\x26\xb4\x68\x4b\x69\x0c\xa9\x58\x8d\x93\xb0\x09\x7b\x32\x35\x45\x75\xf5\xd6\x36\x38\x34\xfb\x15\x5c\xf0\x27\x00\x00\xff\xff\x83\x19\xbc\x17\x4a\x07\x00\x00")

func appJsBytes() ([]byte, error) {
	return bindataRead(
		_appJs,
		"app.js",
	)
}

func appJs() (*asset, error) {
	bytes, err := appJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app.js", size: 1866, mode: os.FileMode(420), modTime: time.Unix(1529144697, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x60, 0x7d, 0x14, 0x97, 0xc3, 0x4e, 0x4, 0x87, 0x76, 0x61, 0xc4, 0x69, 0xbd, 0x12, 0x9d, 0xbe, 0x60, 0xc8, 0x76, 0x82, 0x77, 0x28, 0xb1, 0x12, 0xf0, 0x26, 0x26, 0x86, 0x94, 0xd7, 0x12, 0x1e}}
	return a, nil
}

var _browsefsJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x57\xef\x8a\xdb\x48\x12\xff\xee\xa7\xa8\x01\x43\x4b\x17\x59\x76\x20\x1c\x87\x8d\xef\x48\x66\x12\x08\x24\xb9\xc0\x24\x70\xe0\xf8\xc6\x3d\x52\xd9\xee\xdd\x96\x5a\xb4\xda\x76\x26\x8e\xbe\xee\x03\xec\x23\xee\x93\x2c\xd5\xad\xff\xf6\x78\x12\xd8\xf5\x17\x59\xdd\xf5\xf7\xd7\x55\xa5\x5f\x8b\x24\x53\xda\xc0\x31\x52\xa9\xc1\xd4\xdc\x62\x64\x84\x4a\x03\x10\x79\xf9\xf7\x16\x25\x46\x06\xe3\x00\x36\x68\x5e\x69\x75\xc8\x71\x9d\x7f\xe4\x66\x1b\x40\xde\x5d\x28\x60\xad\x55\x02\x2c\x1c\xa7\x7c\x1f\xfe\x92\xb3\xd9\xa0\xb2\x3e\x0c\x60\x38\x0c\x40\x63\xa2\xf6\xf8\x52\xca\xeb\xad\x90\xf1\x07\x15\x63\xde\x28\xc5\x2a\xd9\xa2\xcc\x50\x77\x55\x75\x16\x05\x10\xab\x43\x2a\x15\x8f\xdf\x08\x89\x8d\x06\xcf\x44\x57\x76\xad\x74\xc2\xcd\x2b\xa9\xee\x6f\xc5\x37\x0c\xc0\xbd\x7f\x12\x09\xe6\x86\x27\x59\xa3\xe9\x36\x9c\xf2\x20\x52\x69\x6e\x20\x52\xf2\x03\x4f\x30\x87\x39\x2c\x98\x79\xc8\x90\x05\xc0\x52\x9e\xd8\x67\x2e\xbe\xd9\xe7\x4e\xc4\xf4\xd8\xb8\x47\x86\x3a\xb9\x4b\x54\x6c\xb7\x12\x15\x8b\xb5\xc0\xf8\xce\x88\x04\xd9\x72\x56\x9a\xd5\x48\xee\x61\x0e\x63\xbb\x31\x1c\x57\x1b\xb9\xd2\xe6\xcd\x2e\x8d\xde\xf3\x0c\xe6\x70\x1c\x40\xe9\x6d\x0a\x1e\x0f\xe0\xde\x87\xf9\xbf\xed\x2a\x80\x58\x83\xc7\xcb\x98\x96\x70\x35\x87\xfb\xea\xc5\x2f\x25\x00\x34\x9a\x9d\x4e\xa1\x16\x0b\xa3\x2d\xd7\xd7\x2a\xc6\x97\xc6\xf3\x61\xd4\xa8\x74\x36\x66\x56\xbb\x18\x74\x2d\xd8\x30\x96\xa1\x54\x11\x97\x78\xad\x92\x8c\x6b\xf4\xee\xab\x75\xab\x54\x04\x14\x2f\x25\x74\xc7\xf3\xa8\x13\x33\x5f\xf4\xa1\x70\xee\x7b\x8b\x8d\x81\x18\x7b\x16\x4e\x85\x61\x74\xc6\x6c\x30\x28\x2a\x2c\xb9\xad\xd4\x1b\x5c\xb7\xc0\x8c\x85\x66\xd3\x12\x1f\xc9\xef\x51\xe6\x53\x58\xb0\x3f\x7e\xfb\xdd\xf9\x86\x52\x69\x0a\x98\x1a\xfd\xd0\xa0\x0d\x50\xd6\xc3\x4e\x6b\x98\xf7\x8b\xbe\xc2\xac\x92\x4a\xf1\xab\x81\xb9\x15\x0e\x35\x66\x92\x47\xe8\x8d\xbf\x8c\xff\x33\x1c\x07\xc0\xc6\xcc\x87\x67\xce\x7e\x48\xe0\x55\xaa\xbd\xbe\xf1\xc8\x48\x75\x16\x41\x8d\xee\x5a\x48\x3c\x93\xc1\xcd\xbb\x27\x13\x68\x77\x8b\x67\x77\x17\x4c\xc4\x6c\x19\x40\xf9\x52\x9e\x64\xc7\x63\x0d\x66\xc6\xcd\xf6\x6d\x9a\xed\x28\xaf\xa1\xc7\xc2\xfb\x32\xd4\xbb\x3b\xda\x61\x7e\x25\x27\x45\x6e\x3e\xdd\xab\xf8\xe1\x44\x8e\x76\x98\x1f\x4a\x9e\x1b\xdb\xe8\x95\xc6\x2e\xa3\xa8\x4e\xc4\xdd\x32\x19\x2e\xe5\x8c\x16\x9b\x0d\xea\xcf\x59\xcc\x0d\xb5\x0e\xcf\x1f\xd2\x08\xbc\xba\x25\xa8\x21\xae\x4e\x06\x94\xc7\x2a\x93\xcc\xf7\x5b\x25\x3d\x1b\x0c\xaa\xd3\xa2\x04\x1e\x3b\x53\x32\x5a\xa7\x1e\xee\xb9\xdc\x21\x5c\xcd\xe7\x56\xa7\xea\xb3\xfe\xbe\xdb\xb5\x0d\x41\x4e\xe8\x18\x9c\x60\xd5\xfb\xf9\x4e\x12\x8c\xfc\xc0\x85\x01\x9d\x45\x1e\xe3\x99\x18\xef\x9f\x8f\xe9\x70\xf3\x87\xdc\x60\x32\x96\x39\x0b\xe0\xc8\xf5\x26\x9f\xc2\x91\xec\x4d\xad\xd5\xa2\xf0\x6d\xe4\x70\x6e\x6a\x7a\x35\xf8\x95\x50\x33\x54\x6e\x51\x9e\x40\x4c\xeb\xcc\x77\x51\xcf\x7a\xf2\x34\x84\x60\xde\x9e\x47\x8b\xd2\xcc\xb2\xb4\x4d\xd0\xb8\x5c\x16\xcc\x56\x10\x5b\xc2\x7c\x3e\x87\x5d\x1a\xe3\x5a\xa4\x18\x37\x73\xa8\x8e\x2b\x8c\x24\xcf\xf3\x77\x22\x37\x21\x8f\xe3\x93\xf2\x18\x8d\x30\xc9\xcc\x03\xab\xca\x1e\x50\xe6\xd8\xeb\x40\x52\x80\x39\x54\x9e\x49\x4d\xa4\x1b\xb6\x5c\x4c\x96\x75\x1c\x21\x85\xea\x55\xb1\xd7\xcd\xb9\x56\x1a\x3c\x89\xd6\x06\xa8\xb5\x35\xd5\x04\x79\x3e\x4c\x07\xf3\xa5\x48\x6b\xf5\x3d\xd7\x60\x68\x3a\xc4\x2a\xda\x25\x98\x9a\x30\xd2\xc8\x0d\xbe\x96\x48\x6f\x1e\x33\x9a\xd5\xb1\x50\x5d\xf4\xd1\x68\x5c\xb8\x3c\x5a\xc2\x4d\x68\x3c\xcb\x30\x8d\xed\xa1\x7b\x46\xb7\xfd\xd7\xe9\x95\x1f\x2d\x4a\xb1\xfa\x7e\xb5\xd3\x74\x91\x46\x28\xe5\xa5\x58\xe3\xb6\x7b\xb0\xe2\x8f\xc7\x4b\xbb\x4f\xca\xaf\xba\xf2\xa3\xd1\xf0\x58\x86\x57\xac\xda\x79\x00\x50\x12\x7b\x4e\xe1\x69\x75\x58\x94\x42\xcb\xb6\x79\x2a\xbe\x2a\x4d\x2a\x3a\xf7\x1d\xeb\x66\x09\xa5\x8d\x3d\x97\x8b\x49\x47\xbb\x2c\xac\x13\x23\xcd\xa7\xfb\x51\x4b\xa1\x51\xb7\x46\x8b\x74\xe3\xfd\xcb\xff\x11\x93\xc4\x0d\xfa\xc6\x48\xc8\x1a\xec\x74\x4b\x47\xa4\xf2\x38\x99\x9d\x09\x83\xed\xd8\xb3\x3d\x97\x3f\xe2\x7e\xf3\x77\xb8\xdf\xfc\xb0\x7b\xcb\x90\xce\x63\xd9\x65\x65\x14\xd0\x13\x78\x86\x09\x37\xd1\xd6\x73\xd4\xc9\xbf\x64\xb4\xa6\x76\x5e\x8a\x07\xb8\xe1\xc6\x9a\xff\xc7\xf3\xc9\x64\xe2\x77\x9d\x0c\x7e\x0a\x95\x32\xfd\x11\xeb\x14\xab\xad\x74\x83\x5f\xcd\xb5\x23\xcb\xae\x4e\x2e\x16\xab\xfd\xd2\xf6\x33\xe8\x91\x16\xfa\x40\xb4\x08\xcc\x42\xab\x43\x48\x45\xbe\x84\xef\xdf\xe1\x58\x7f\xf9\x97\x45\x27\x98\xd6\x14\x90\xd4\xff\xb5\x89\xd0\x69\xf4\x9d\xd6\x23\x3f\xe3\xe9\x85\x69\x40\xdb\xdd\xfe\xa6\x1f\xad\x3e\x3e\x13\x9c\xeb\x47\xb4\xba\x78\xc9\xbe\x8c\xc5\xb4\x3d\xe9\x48\xa9\x67\xa9\x78\x14\xbd\x36\x74\xa1\xfb\x37\x3b\xe9\x80\x52\xf4\xea\xfc\x17\xab\xfa\x19\x4d\x69\xbd\xde\x63\x6a\x28\x47\x4c\x51\x7b\x2c\x92\x22\xfa\x95\x05\xe0\xe1\xde\x6f\x33\xac\xe6\xd7\x77\xef\x69\x75\x38\x01\xa2\xb8\x90\x50\xd1\x3e\x54\x0a\xa2\x85\x05\x81\xd3\x52\xad\xd4\x8a\x9a\xb6\x17\x10\x51\xab\x80\x87\x7e\x8b\x79\x28\x89\xa1\x54\x1b\x0f\x1d\x57\x1f\x14\x83\xee\xed\xae\xcd\x94\xce\x24\x9d\x6f\xd5\x21\x65\x41\x97\x86\xf9\xb3\xc1\x59\x4a\x71\x06\xb3\x2d\x4f\x37\xf8\xa4\x3e\xdd\x2a\x52\x43\x2c\xfd\xac\x91\x12\x78\xdc\x57\xb0\x3f\xcd\xca\x2f\x30\xf2\xc5\xff\xbf\x8c\x97\xcf\x2a\x5e\xce\x6a\xc2\x67\x85\xa9\x30\x48\xdc\x8d\x80\x47\xc8\xf9\x00\x00\xf7\x61\xa6\x91\xe2\xbc\xc1\x35\xdf\x49\xba\x40\xc1\x80\xce\xb6\xe1\x85\x17\xe0\x68\xf8\xeb\x5f\x43\x46\xfb\x81\xf6\xe4\xab\xb3\xf7\x67\x03\x47\xb0\x2f\xc5\xd6\x67\xd8\x2e\x42\x4b\x52\x61\x5e\xf2\xf6\xd0\xbe\x56\x40\x57\x35\xc6\x46\xf6\xc7\x7c\xa0\x9d\x7a\x24\x91\x2c\x4d\x25\xab\x73\xae\x36\x57\x34\x19\xa7\x30\x3c\x92\x84\xbd\x1d\x15\x40\xdf\x90\x7a\x89\x5e\x0a\xa0\x39\x58\x2f\xd1\x4b\xb1\x72\x9e\x00\xc6\x63\x78\xf3\xf6\x7f\xef\x5f\x43\xce\x53\x61\xc4\x37\x84\xda\x54\x8b\xe1\x46\x6b\x8d\x79\xf6\x14\x07\xb7\x77\xad\xa0\x6e\xef\x04\xcd\x56\xc5\x53\x60\x1f\xff\x7b\xfb\x89\x05\x50\x2e\x13\x2b\x9b\xb6\x66\x40\x2c\xf4\x9d\x88\xa7\x30\x09\xea\x25\x97\xd5\x6a\x78\x3c\x39\xd6\x62\xdc\xce\x75\xd5\xa8\xec\x9c\x09\xd8\x94\xcf\x9a\x9a\x4c\x61\xa2\xfe\xf9\xe2\x45\x00\x9d\x8b\xef\x14\x26\xd5\x18\xa8\xc6\x8a\xcb\x54\xd0\xcd\xca\xa5\x1b\x8a\x78\xd6\x41\x3c\x16\xda\x73\x5b\x1d\x95\x5d\x26\x4f\xd0\x59\x51\x90\xe3\xe1\x51\xc4\xc5\x2a\x80\x63\x03\xc5\x67\x42\xc2\x5e\x53\x8e\xa0\xd6\xeb\x1c\xcd\x14\x26\x50\x04\xa0\xf9\xe1\x95\x45\x86\x34\x8b\x56\xdd\xfd\xd4\xd4\xd9\x8a\x38\xc6\xb4\xd3\x27\x4f\x5d\x7c\xc8\xc7\x9f\x01\x00\x00\xff\xff\xa1\x74\x2f\xe6\xc0\x12\x00\x00")

func browsefsJsBytes() ([]byte, error) {
	return bindataRead(
		_browsefsJs,
		"browsefs.js",
	)
}

func browsefsJs() (*asset, error) {
	bytes, err := browsefsJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "browsefs.js", size: 4800, mode: os.FileMode(420), modTime: time.Unix(1529144697, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x37, 0xe8, 0xc5, 0xde, 0x6c, 0xb4, 0xc9, 0x6a, 0x27, 0x11, 0xfd, 0xfb, 0x9a, 0xba, 0xcd, 0xbe, 0xd, 0x26, 0xd9, 0x0, 0xed, 0x92, 0xda, 0x62, 0x8d, 0x73, 0xea, 0x17, 0x6, 0x3f, 0xf, 0xed}}
	return a, nil
}

var _domhelperJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8d\xcd\xaa\x83\x30\x10\x46\xf7\xf3\x14\xdf\x22\x0b\x03\x92\x17\x08\x5e\x90\xbb\xef\xa6\x4f\x90\x9a\x01\x85\xd1\xd8\x24\xf6\x07\xf1\xdd\x4b\xd3\x96\x6e\xea\x72\x38\xe7\xcc\xd7\x85\x29\x65\x28\x34\xf0\xa1\x5b\x46\x9e\xb2\x39\x2f\x1c\xef\x47\x16\xee\x72\x88\xe6\x34\x4c\xbe\xfa\x30\x6d\xe9\x1d\xec\x17\xad\xc8\x4e\x14\x79\x0c\x17\x6e\x45\xfe\xfb\x41\xfc\x21\x78\x4e\x68\x30\xbb\x88\xe6\x0f\x2b\x01\xd7\x7e\x10\xae\x66\x17\x4d\xef\xd2\x57\xaa\xb4\x26\x00\x4f\xd3\xbc\x7e\x14\x56\x44\x71\x29\x97\x4b\x5b\xda\x2c\x11\xdf\xe6\x10\x33\x56\x55\x43\xa9\xfa\xd7\xe4\x66\xe9\x11\x00\x00\xff\xff\x30\xdb\x50\xe5\xf5\x00\x00\x00")

func domhelperJsBytes() ([]byte, error) {
	return bindataRead(
		_domhelperJs,
		"domhelper.js",
	)
}

func domhelperJs() (*asset, error) {
	bytes, err := domhelperJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "domhelper.js", size: 245, mode: os.FileMode(420), modTime: time.Unix(1529144697, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb9, 0x50, 0x14, 0x4a, 0x4c, 0xda, 0x9d, 0xcb, 0xdf, 0xd1, 0x68, 0x38, 0x8d, 0x86, 0x6c, 0x2, 0x3d, 0x9a, 0xf9, 0xb1, 0x57, 0x99, 0x67, 0xaf, 0x2e, 0x4b, 0x2e, 0x1f, 0x8b, 0xf6, 0x21, 0x2f}}
	return a, nil
}

var _formatJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x5d\x4f\xdb\x30\x14\x7d\xf7\xaf\x38\xa0\x49\xb1\xf9\x28\x69\x35\xf1\x40\x48\x27\xc1\xc4\x26\x4d\x68\x15\xf0\xb2\x37\xbc\xc6\x01\x4b\x89\x5d\xc5\x0e\xa3\xab\xf2\xdf\x27\x3b\x4d\xe7\x74\x69\xd9\xf6\x80\x50\xef\x3d\xf7\x9c\x7b\x7d\xcf\xcd\x5c\x2b\x63\x91\xeb\xaa\xe4\xf6\xaa\xd0\xdf\xef\xe5\x4f\x81\x14\x2f\xbc\x40\x3a\xc5\x8a\x00\x32\x07\xf5\x3f\xd3\x14\xb5\xca\x44\x2e\x95\xc8\x98\x4f\x01\x95\xb0\x75\xa5\x10\x45\x09\x01\x1a\x88\xc2\x88\x4d\xc1\x14\xe3\x78\xf2\x1e\x47\xe1\xbf\xad\x3a\x8f\x3b\x03\x1d\x00\xb2\x91\xd5\xb3\x4a\xcc\xa5\x91\x5a\xd1\x09\xc3\x31\xa2\x4f\xf2\xea\x4d\xa1\xb7\x15\x06\xa9\x6f\xf7\x51\x0f\x73\xfa\xcc\x00\xd5\x97\x3e\x55\xaf\xd4\x55\x1e\x23\x5a\x03\x48\x43\x48\xb8\x80\x07\x59\x0a\x63\x79\xb9\x40\x0a\x6a\x4f\xa0\x17\xd6\xa4\xab\x86\x75\xab\x68\xb1\x99\xcc\x73\xa4\x50\xe2\x07\x3e\x72\x2b\x28\xc3\x29\x6c\x42\x36\xf9\x05\xcf\x5c\xda\x15\x51\x85\x4b\x8c\x63\x7c\x40\x14\x47\xb8\x40\x14\xb9\x0e\x55\xb2\x5e\xab\xe3\x1f\x55\xa2\xe0\x56\xbe\x08\x1c\xa4\x29\x72\x5e\x18\xd1\x8d\xdb\xd2\x19\xcb\x2b\xfb\x35\x7f\xd0\x19\x5f\xf6\x64\x13\x0f\x0a\xd3\x23\x23\xec\x67\x5d\x57\x86\xc6\x3b\xb2\xb7\x52\xd5\x56\xec\xce\xdf\x8b\xb9\x56\xd9\xbe\xfa\xa2\x90\x26\x00\x79\x94\x9b\xc5\xbf\xca\x25\xce\x63\xbf\xe5\x38\xee\x86\xd8\x3c\xfd\xe3\xbb\x55\x0b\xf2\x6e\x88\x63\x6f\x83\x1b\xf9\x2a\x32\x1a\xb3\xc6\x80\x3f\xe9\xc7\x56\x34\xf0\xc0\x9a\x75\x8c\xa3\x96\xf9\xef\xe8\x7f\xa3\x7a\x1a\xe5\x5e\x8d\xf3\xff\xd0\xd8\x21\xf4\x3c\x2c\x64\x31\xed\x3d\xe8\x10\xff\x82\x67\xd4\x8e\x9e\xba\x3d\x32\xd6\x5c\x04\xc1\x6e\x7d\x8c\x35\x1d\x3d\x69\xff\x5a\xaf\x2c\x4b\x67\xbd\x90\xe6\xa6\x2e\x8a\x6f\x82\x57\x94\x9d\x4e\x5c\x9f\xcd\x59\x48\xa7\x95\x7d\xa6\xec\x78\xdc\x0f\xb7\xf6\x5a\x4b\xb8\xc6\x0f\xbc\x51\xf3\xba\x28\xb6\x2e\x71\x59\x66\x09\xd6\x1d\x90\x70\x8c\x65\x99\x35\xf8\x87\x69\xc2\x70\xe7\x41\xd7\xc1\xce\x0b\xbd\x9b\x5d\x77\x47\xd6\x7d\x24\xdd\xad\xc5\x2c\x6c\xef\xf0\xf4\xd0\x8d\xe0\x16\x10\x86\xb7\xa8\xe8\xe6\xa4\xd4\x51\xbb\xcb\x84\x34\x09\x21\xe2\x75\xa1\x2b\x8b\x55\xff\xe3\x7c\xb2\x5d\xfe\x47\xe0\x6e\x76\xdd\x24\xe4\x57\x00\x00\x00\xff\xff\x49\xdd\x4e\x5b\xd9\x05\x00\x00")

func formatJsBytes() ([]byte, error) {
	return bindataRead(
		_formatJs,
		"format.js",
	)
}

func formatJs() (*asset, error) {
	bytes, err := formatJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "format.js", size: 1497, mode: os.FileMode(420), modTime: time.Unix(1529144697, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x40, 0x9b, 0x4a, 0x23, 0x46, 0x50, 0xc, 0x71, 0x19, 0x97, 0x9a, 0xe, 0x11, 0xc6, 0xbe, 0xd0, 0xd5, 0x0, 0x7a, 0xbe, 0x66, 0xc9, 0xbe, 0xa9, 0xc8, 0x83, 0x7e, 0x4, 0x8c, 0x51, 0x21, 0x3d}}
	return a, nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x98\xc1\x72\x9c\x36\x18\xc7\xef\xfb\x14\xaa\x72\x2d\x21\x9b\xdc\x32\xac\x66\x52\xbb\x49\x3d\x93\x26\x9e\x49\xd2\x4c\x4f\x8c\x80\x8f\x45\xb5\x90\x18\x49\x60\x6f\x4f\x3d\xe5\x9e\xe9\x3b\xf4\x21\xfa\x38\x7e\x92\x0e\x12\x68\x59\xbc\x89\x0b\x6b\x7c\xb2\xd0\x7e\xff\x3f\x3f\x3e\xe9\xfb\x04\x8e\x7e\x38\x7f\x7f\xf6\xf1\xf7\xcb\x9f\x51\x61\x4a\x4e\x56\x91\x61\x86\x03\x79\x6f\xa8\xaa\xd1\x67\x48\x3e\x5d\xbc\x44\x17\x82\x19\x46\x39\xfb\x93\x89\x6d\x14\xba\x80\x55\xc4\x99\xb8\x42\x0a\xf8\x06\x6b\xb3\xe3\xa0\x0b\x00\x83\x51\xa1\x20\xef\x67\x9e\xa6\x5a\x63\xb2\x8a\x4a\x30\x14\x09\x5a\xc2\x06\x37\x0c\xae\x2b\xa9\x0c\x46\xa9\x14\x06\x84\xd9\xe0\x6b\x96\x99\x62\x93\x41\xc3\x52\x08\xec\xc5\x8f\xcc\xdd\x30\xd0\x29\xe5\xb0\x59\xb7\x1e\x89\xcc\x76\x64\x15\x09\xda\xa0\x94\x53\xad\x37\x58\xd0\x06\x93\x15\x42\x51\xb1\x1e\x4c\xc5\x31\x33\x50\x22\x3f\x0a\x02\x2e\xb7\x12\xbb\x07\x8a\xc2\x62\x6d\x25\xf4\x1b\x0a\x43\x13\x3f\x08\x82\x44\xc9\x6b\x0d\xb9\xee\x9f\xea\x89\x9f\x20\x6e\x84\x72\x1d\x85\xf4\x3e\x47\x2f\x67\x42\x66\x90\x25\xda\x50\xa3\x31\xe9\xae\x90\xbd\x9c\x62\x93\x70\x99\x68\x23\x15\x60\xe2\x87\x53\xf4\x5c\x6e\xdb\x65\xc0\xa4\x1b\x4c\xd4\x72\x68\x80\x5b\xb1\x1d\x4d\x51\x6b\x30\x86\x89\xad\xc6\xa4\x1f\x59\x75\x14\x0a\xda\x90\x55\xa4\x21\x35\x4c\x8a\xde\xa8\xbf\xec\xfe\x06\x41\x41\x75\x01\x34\x03\xb5\x9f\xda\xaf\x48\xcb\x90\xb1\x66\x24\x8e\xe3\x4e\xd1\x07\xf6\x13\x56\x30\xc4\x4e\x6a\x63\xa4\x18\xc4\x55\x54\x81\x30\x19\x53\x1e\x1f\x93\xdb\x2f\x5f\xbb\xe7\x45\x28\xe2\x34\x01\xee\xe5\x5e\x67\xa7\x31\xca\xa5\xda\xcf\x06\x15\x35\x05\x26\x97\xd4\x14\x2f\x51\x14\xda\x90\xce\x85\x89\xaa\x36\x77\x5d\xac\x00\x99\x5d\x05\x1b\x6c\xe0\xc6\x60\xc4\xb2\x3b\x7e\xce\x41\x03\x87\xf4\x88\x85\x6e\xeb\xcc\xc5\x20\x14\xc9\xca\x26\xb3\xa1\xbc\x86\x76\x91\x4a\xc0\xc8\x29\x21\x23\xef\x68\x09\x51\xe8\x42\x08\x3a\x2e\x31\xac\x84\x98\xea\x14\x93\x8f\xac\x04\x74\xfb\xe5\xef\xff\xa5\xc8\x60\x20\xf9\x3a\x92\x44\xa1\x43\xf8\x7e\x2e\xea\x8a\x4b\x9a\xf5\xd9\xc8\x19\x87\x51\x36\xfa\x80\xb2\xe6\x86\x55\x6d\x77\x3a\xb2\x40\xe3\xf5\xb5\xbf\x06\x5e\x7b\xb8\x5e\xdd\x2c\xf9\x64\xff\x0e\x56\x2c\x0a\x33\xd6\xd8\x81\xa1\x09\x87\xde\xbd\xeb\x66\x76\xbb\x73\x18\xde\x85\x69\x83\x49\x64\x5c\xff\x6a\xf5\x6e\x18\x85\x36\xb2\xdd\xfc\xdd\x56\x9d\x57\x00\xbe\x98\xef\xd9\xff\x5d\xdc\x7d\xdb\xdf\x87\x29\xc8\x15\xe8\xe2\x60\xef\xff\xdb\xd7\xba\xcf\x81\x97\x7b\x5d\x69\xfb\x52\x9b\x34\xd4\x0e\xd1\xed\x5f\xff\xf4\xaa\x01\x9d\x0f\xef\xd2\xe3\x0c\xa7\xa4\x62\xdf\x88\x46\xd6\x57\x4d\xeb\x8c\xfa\xdf\x83\xc0\xdd\xc2\x3d\xee\x9d\x38\xd7\xa9\xf6\x55\xa2\x2b\x2a\xc6\x11\xae\xa0\x49\xbb\xef\xf4\x4e\x1b\x28\x5f\x46\x61\x1b\xe7\x45\x47\x5c\x6d\x05\x78\x88\x38\x76\xac\x76\xd7\x7a\xb2\xbd\xa1\xbf\xbf\xaf\x01\xb7\xd5\x15\xcd\x98\xc4\x83\xa4\x75\x6e\xdd\xbc\x3b\x52\x8f\xf9\x7d\xeb\x46\xc1\x33\xdc\x17\xe7\x33\x4c\x0e\x0b\x64\x00\x3b\xe8\x60\xc7\x4d\xc8\x39\x24\xf5\xf6\xa0\x91\x3d\x02\xfc\xda\xc3\xaf\xe7\xc3\xaf\x31\xb9\x10\xb9\x7c\x6c\xf6\xe7\x9e\xfd\xf9\x7c\xf6\xe7\x98\x7c\xa6\x4a\xd8\xd7\xb0\xc7\xc5\x7f\xe1\xf1\x5f\xcc\xc7\x7f\x81\xc9\x99\x62\x86\xa5\x94\x8f\xf8\x47\xe7\x80\xef\x2f\xd3\xfb\xc2\xe0\xe5\xe8\x68\x63\x78\x88\x4e\xf0\x13\x4d\xaf\x40\x64\xe3\x36\x70\x4c\x61\x93\xd6\x9d\x56\x3d\x59\x90\x38\x7d\xcc\xca\x8a\xc7\xf6\x24\x26\xc1\xd0\xcb\x3f\xff\xc3\x70\xa2\xd7\x9c\x6e\xf5\xc9\xb4\x79\xeb\xb2\x10\xe9\x19\x4d\x0b\x98\x4d\x98\xb6\xea\xc5\xb3\x69\x19\x4f\xcc\xa5\x23\xfd\x6e\x26\x67\xec\xf9\xc3\xef\x8a\xc5\xb6\xfd\x5b\xaa\x0d\xfa\xb0\x13\xe9\xc4\xc7\x1f\xe2\x05\x9c\x6a\x13\xeb\x9d\x48\x17\x5a\x25\x0b\xf9\xf1\xe6\x64\x44\x73\xb3\x24\xe0\xc5\xf9\xc9\x80\x2c\x5b\x08\xf0\x37\x50\x9a\x49\x71\x0a\x60\xe3\x2c\x16\x5d\x62\x96\x5e\x81\x39\x7d\x99\xad\xcd\x42\xa0\xef\xea\x32\x01\x85\x64\x8e\xde\xc9\x0c\xd0\x5b\x99\x5e\x4d\x6d\x1d\x07\xc4\xc2\xfa\xc5\x32\x8f\xdb\xd9\x98\xb7\x7e\x0f\xd8\x46\xf6\x5f\xe7\xa7\xb5\x90\x83\xb7\x83\xc3\x94\xb8\x77\x03\x5a\xb1\x4a\x41\xce\x6e\xba\x7f\xcb\xa0\x57\x97\x17\xe8\x03\xa8\x06\xd4\xe8\xeb\x78\xfc\x4d\x38\xca\xd0\xf8\xf3\x78\x60\xfc\xa0\x0b\xf9\x46\xa2\x66\x56\x55\xf4\x29\x0d\xb6\x32\x5e\xb6\x28\xde\x7f\x98\x8b\x26\x97\x3a\xd4\x5f\xa9\xb4\x98\x0b\x45\x55\x5a\x2c\x84\xf5\x04\xbd\x91\x4a\xd6\x86\x09\x98\x5a\x8d\x1e\x4f\xd4\x65\xbc\xed\x5d\x16\xe2\xfc\x45\x6a\xd3\xbe\xce\xcc\x65\x2c\x3a\xfd\x42\x78\x97\x6c\xea\x0b\xb0\x27\xab\x16\x3b\xbb\x3e\xcd\x87\xaa\x17\x83\xfa\x15\x4a\x44\x39\x97\x29\x35\x30\x1b\xaf\x84\x32\xb6\x26\x0b\x42\xba\xcf\x34\x94\xca\xb2\x64\xe6\x44\x56\xbd\x5b\xaa\xad\xbc\x39\x43\xa9\xac\xc5\xd4\xb3\xff\xb0\x76\x97\x4a\xe3\x13\xf4\xfa\xfc\xa4\xae\x92\x67\x93\x8e\xf4\x54\xb1\xaa\xff\xea\x2f\x65\x56\x73\xc0\x48\xab\x74\x83\x9f\x86\xb4\xaa\x9e\xfe\xa1\x31\x89\x42\x17\x45\x56\xff\x05\x00\x00\xff\xff\xce\x73\x95\x27\xec\x19\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 6636, mode: os.FileMode(420), modTime: time.Unix(1529144697, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xea, 0x0, 0xa6, 0xa, 0xfd, 0xc3, 0xa8, 0xb8, 0x6f, 0x61, 0xba, 0xe4, 0x26, 0x65, 0xe9, 0x10, 0xf5, 0xdc, 0x4c, 0xdc, 0xea, 0xad, 0x7d, 0xdb, 0x4c, 0xe, 0x17, 0x84, 0xc6, 0xe5, 0x24, 0xbc}}
	return a, nil
}

var _loglevelJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4f\x6f\xdb\xb8\x13\xbd\xeb\x53\x4c\x01\x03\xa4\x50\x45\xee\xef\x1a\xfd\xb4\x40\x91\xed\x21\x40\xd1\x3d\x14\xbb\x97\xc0\x88\x69\x6a\x6c\xb3\xa5\x49\x81\xa4\x95\x7a\x5d\x7d\xf7\x05\x29\xea\x9f\xed\xa4\x68\x0e\x89\xc3\x79\x33\xf3\xe6\x71\x66\x4c\x71\xa8\xb5\x71\x70\xe6\x5a\x39\x54\xee\x2b\x72\x27\xb4\xca\x40\xd8\xf8\xf1\x2b\x4a\xe4\x0e\xab\x16\xb6\x46\x1f\x80\xe4\x4b\xc5\x9a\xfc\x9b\x25\x45\xd2\xfb\x2e\x32\x58\x2c\x32\x30\x78\xd0\x0d\x7e\x94\xf2\x61\x2f\x64\xf5\x45\x57\x68\x47\xa7\x4a\x1f\xf6\x28\x6b\x34\x73\x57\x53\xf3\x11\xc3\x6a\xd1\x59\x13\xae\x95\x75\x20\x85\x75\x7f\x8a\x06\x4a\x58\x50\x92\x4b\xbd\x93\xd8\xa0\xbc\xbb\xf3\xe7\x24\x2d\x7a\x94\x3f\xb4\x50\xc2\x13\xa9\x70\x73\xdc\x91\x0c\x88\x50\x5b\xed\xff\xbe\x30\xa3\x84\x0a\x47\xdc\x08\x27\x38\x93\x64\x55\x24\x7f\x6d\xbe\x21\x77\xf9\xd6\x20\xfe\x8b\xb4\x0b\x90\x0e\x69\x9d\x11\xbb\x1d\x9a\xbf\xeb\x8a\x39\x84\x12\x98\x3d\x29\x0e\x34\x85\xf2\x0f\x38\x27\x00\x62\x0b\xf4\xdd\x95\x3e\x94\xf4\x04\x49\x9a\x26\x00\x00\x06\xdd\xd1\xa8\x22\x49\x00\x9c\x39\x05\x57\xb8\x25\x12\x8d\x75\xa6\x01\x0a\xd0\xb1\x30\x68\x8f\xd2\xf9\xf4\x2f\x4c\x38\x30\x35\xa7\x84\xd5\x62\xd9\xfc\x6f\x29\xb5\xe7\xb7\xe4\xcc\xe1\x4e\x1b\x81\xd6\x8b\x31\x7a\x8e\xe7\x50\xc6\x30\x4f\x24\x1e\x9e\xc8\x2a\xb7\xda\x38\x1a\xf0\xfe\x87\xb2\x0c\x36\xa1\x36\x36\x43\x49\xcd\x99\xc4\x07\x7d\xa8\x99\x41\xba\x99\xda\xd2\x98\x6e\xab\x0d\x50\x89\x43\xc6\x13\xe8\xed\x24\x7b\x1a\x4b\xee\x79\x29\x76\xf0\x72\xf6\xe0\x69\xc4\x22\x02\x43\xb0\xa3\x31\x9f\xbd\x8e\x33\x6c\xa7\xec\x0a\x7e\xfe\x84\x0f\xc5\x2c\xac\x50\xf5\xd1\x7d\xe9\x62\xaf\x87\x26\x59\x9c\x7d\xba\x76\x3d\xc7\x6a\xc5\xf7\x4c\xed\x26\xb7\x8a\xcd\x70\xaf\x53\xa0\x8d\xb7\xfa\xe8\x83\x87\x06\x5c\x0f\x0d\xf8\xfc\x6c\x58\x25\xf4\x93\x4f\x50\x92\xc5\x79\x20\xd0\x92\xd5\x3d\xdf\x23\xff\x8e\xd5\x3a\x2d\x5e\x89\xf8\x0f\x93\x47\x9f\xbf\x66\xc6\xe2\xa3\x72\x74\x96\x2a\x6f\xbc\x79\xe2\xec\x9b\x6d\x54\xe4\x5d\x39\x8f\x93\x4e\x88\xc3\xa4\x53\xd6\x37\x3b\xe5\xb4\xec\x55\xc9\xe0\x7c\x40\xb7\xd7\xd5\x3d\x90\x5a\x5b\x47\x32\xd8\xe8\xea\x74\x3f\x8f\xde\x4e\x78\xc0\xec\x5e\x66\xb0\x11\xd4\xc6\x4f\x6d\xec\xe4\xe1\x8a\x1c\x1e\xba\x41\xae\x34\x3f\x1e\x50\xb9\x9c\x1b\x64\x0e\x3f\x49\xf4\xff\x51\x52\x89\x86\x0c\xd9\x22\x3c\xe7\x92\x59\xfb\x59\x58\x97\xb3\xaa\xa2\xe4\x7b\xd3\x08\x7c\x79\x7e\xf6\xe6\x11\x1c\x87\x27\x67\x75\x8d\xaa\x0a\x53\x45\x63\x80\x01\x33\x23\x23\xd9\x06\xe5\x6f\xb0\xe9\xf1\xaf\xd1\x09\xf6\x1b\x70\x87\x3f\xdc\x43\xb7\x55\xa1\x0c\xcd\x7f\x59\xdf\x94\x72\xef\x96\x5e\x48\x17\xfa\xe1\x37\xd8\xf6\xf8\xd7\xd8\x06\xfb\xaf\xe1\x63\xaf\xc7\x95\x76\xe5\x20\xaa\x37\xe7\xed\x56\x8d\xbd\xef\x58\xe3\xb0\x41\x04\x94\xf0\xa1\x00\x01\xff\x8f\xfb\x3c\x97\xa8\x76\x6e\x5f\xc0\xfb\xf7\x20\xd2\xab\xf9\x0c\x33\xf7\x78\x93\xc2\xdd\xe2\x2c\x3c\x8f\x5b\x1e\x6f\xa8\x18\xec\x64\x3a\x79\x61\x1e\xdd\xa9\xf6\xd3\x4a\xc2\xc8\x93\x4b\xeb\xab\xaa\x75\xf0\xab\x68\x71\x05\x0e\x1b\xe3\xd2\x1e\x44\x8d\xb5\x5d\xda\x9a\xb8\x38\xc4\x15\x89\x6e\xe5\x40\x39\xdd\x14\x65\x09\xe2\x2a\x3d\xab\xaa\x4f\x0d\x2a\xe7\x19\xa3\x42\x43\x49\xb7\x0e\x49\x36\x6c\xc6\x89\xcf\x70\xd5\xb3\xd1\xf2\x81\xd2\x2b\x75\x43\xfb\xbe\xa1\xee\xc5\x90\xc4\x31\x79\xa3\xeb\x6e\xe3\x2d\xba\x8f\xce\x19\xb1\x39\x3a\xa4\x64\xab\x0d\xc9\x7a\xb9\xae\xb0\xf3\xf9\xeb\xba\xea\x49\xac\x7e\x51\x5f\xf0\x1d\x62\x75\x0b\xcd\xff\x6e\xfd\x77\x11\xdf\x03\x1d\x76\xae\x2f\x5c\x4b\xf4\x5f\x0b\xb4\x93\xad\x4d\xda\x64\xfe\x8e\x9a\x3e\x0a\x6e\xa8\x6f\xf7\xfa\x45\x91\x0c\xb0\xff\x0a\x9a\x3d\x3d\x68\x5a\x24\x7e\x05\x27\xf8\xa3\x7b\x2c\xf5\x4f\x9d\xb6\x48\xfe\x0b\x00\x00\xff\xff\xac\x62\x91\x12\xb7\x09\x00\x00")

func loglevelJsBytes() ([]byte, error) {
	return bindataRead(
		_loglevelJs,
		"loglevel.js",
	)
}

func loglevelJs() (*asset, error) {
	bytes, err := loglevelJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loglevel.js", size: 2487, mode: os.FileMode(420), modTime: time.Unix(1529144697, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf7, 0x1e, 0x4a, 0x76, 0xb5, 0x11, 0x3a, 0x11, 0xff, 0xd2, 0x3e, 0x40, 0x73, 0x39, 0x8c, 0x4, 0xe9, 0x6a, 0x3d, 0x77, 0x9d, 0x93, 0x1, 0xac, 0x94, 0x20, 0xf6, 0xc2, 0xea, 0x9b, 0x32, 0x16}}
	return a, nil
}

var _logviewJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4d\x6f\xdc\x36\x10\xbd\xeb\x57\x4c\x80\x00\x92\x0a\xad\xbc\xbe\x7a\xab\x00\x89\xed\xa0\x05\xdc\x00\x45\x9c\x93\x61\x6c\x08\x69\xa4\x65\x4b\x89\x2a\x39\x2b\xc7\x30\xf4\xdf\x0b\x7e\xe8\x6b\x65\x3b\x06\x8a\x9e\x76\x25\x3e\xce\xbc\xe1\xbc\x79\x14\xaf\x5b\xa9\x08\x9e\x72\xd9\x10\x36\xf4\x15\x73\xe2\xb2\x49\x80\x6b\xff\xf7\x2b\x0a\xcc\x09\x8b\x1e\x4a\x25\x6b\x08\xd3\xb3\x86\x75\xe9\x5f\x3a\xdc\x05\xc3\xde\xf7\x09\x28\xac\x65\x87\x1f\x85\xb8\x3c\x70\x51\x7c\x91\x05\xea\x69\x43\x21\xeb\x03\x8a\x16\xd5\x72\x9b\x6a\xf3\x09\xc3\x5a\xbe\x5c\x2d\xa5\xaa\x19\xdd\xf2\x1a\x35\xb1\xba\x9d\x90\x6e\x61\x09\x16\xd8\xa1\x98\x65\x14\xb2\xb2\xaf\x1c\x2a\xc8\x65\xa3\x09\x74\xae\xa4\x10\x57\x32\x3f\xd6\xd8\xd0\xad\xbc\x95\xed\x47\xfd\xd8\xe4\x90\x41\x14\x43\xf6\x01\x9e\x02\x00\x85\xff\x1c\x51\xd3\xc7\x86\xd7\xcc\x94\xff\x59\xb1\x1a\xa3\x69\x1d\xa0\xf0\x01\xd2\xe1\xcf\xb5\x40\xfb\xec\xe2\xdf\xca\x16\x32\xd8\xee\x02\x80\x3e\xde\x05\xfd\x8b\xe9\x3f\x49\x22\x59\xff\x6f\x0c\x7e\x02\xfa\x0d\x79\x75\xa0\x35\xcb\x16\xd5\x9f\x47\x54\x8f\x37\xb2\xba\xe1\x35\x27\xc8\xe0\x7c\xbb\xdd\xf9\xd5\x5a\x2a\x5c\x2f\x8f\x9b\x2b\xa4\x1b\x46\xa8\xe9\xf7\x02\x32\x60\xb6\xb4\x89\xb8\xc3\x28\xd4\x86\x1e\x7b\x60\x9c\x40\xb5\x79\x14\xb2\x96\x9f\x75\xe7\xa6\x67\x15\xaa\x33\x61\x03\xec\x85\xac\xf6\xd8\x90\x7a\xdc\xf3\x22\x8c\x77\xf6\x5c\xe8\xa8\x1a\xbb\x3f\xe5\xc5\x2e\xe8\x83\x40\x20\x81\x14\x05\x6a\xba\x36\x50\x9b\x75\xe4\x2a\xb8\xa6\x2b\xde\x41\x06\xef\xa3\x30\x15\xb2\xea\x38\x3e\xec\xf7\xe6\xb5\x09\xe8\x40\xb9\x14\x5f\x58\x8d\x1a\x32\xb8\x0b\x89\xd7\x18\x26\x10\x5a\xe9\x98\x3f\x39\x23\xac\xa4\x7a\xb4\x2f\x65\xe5\x7e\x72\xdb\x95\xf0\x7e\x08\x51\xf0\xee\xb3\x92\xb5\x65\x60\x1a\x69\x59\x9f\x14\x6d\xdf\x39\x32\x63\x5f\x72\x85\x8c\xd0\x77\x25\x0a\x0b\xde\xb9\x3a\x07\x6c\x9a\x0b\xa6\xf5\x0d\xd7\x94\xb2\xa2\x88\xc2\xb1\x02\x0b\x30\xd8\x00\xa0\x94\x0a\x22\x73\x0c\xbe\x10\x90\xe5\x58\x53\xec\xe5\xd2\x31\x05\x39\x0a\xf1\x96\xe4\x60\x91\x2f\xa6\x36\x8b\xaf\x00\xbf\x2f\x80\x9b\xcd\xfb\x27\xcf\xa5\xff\xee\xe8\x02\x18\xae\x1d\x33\x5c\x6c\x19\x77\x1e\x70\xef\x62\xf2\x12\xa2\xa1\x92\x2c\xcb\xc0\xb5\x64\x28\x04\xfc\xce\x13\x6b\x88\x1a\x7c\x80\x2b\x46\x18\x75\x4c\xfc\x72\xbe\xdd\x6e\xe3\x04\x9e\x14\x0a\x46\xbc\xc3\x0b\x28\x99\xd0\x98\x40\x79\x14\xe2\x02\x48\x1d\xb1\xf7\x15\x00\x9c\x9d\x2d\xc8\x84\xbc\x08\x3d\x93\x1e\x50\x68\x5c\x13\x72\xda\x98\x18\x19\x80\x0d\x91\x65\x70\x6c\x0a\x2c\x79\x83\x45\xec\x17\x07\xc2\x5b\x5f\xfc\xf0\xec\xec\xea\xae\x63\xe2\xfe\x6e\x7b\x9f\x92\xfc\xd6\xb6\xa8\x2e\x99\xc6\xc8\x53\xeb\xa7\x23\x26\xfc\x41\x97\xce\x9d\x21\x33\x01\x7c\xb0\x51\x27\xac\x6d\xb1\x29\xac\xf1\x46\x66\x87\x0d\xd1\x07\xd3\xc8\x0c\x48\x3b\x33\x4e\x90\xa4\xb8\x99\xb6\x6f\x6d\xc1\x08\x9f\x99\x55\x53\xd6\xbb\xd5\x1d\x30\x2a\x21\x8c\x5d\x89\x2e\x81\x25\x64\xd4\xef\x0e\xc5\x8f\xdf\xcc\x08\xec\xac\xcf\xcc\x21\x1a\xd4\x30\x5a\xc2\x51\xd0\xab\xa6\x20\x2b\x1d\x26\xf0\xc4\x54\xa5\x2f\xc6\xb3\xaf\x79\xb3\xe7\xc5\x05\xfc\xc1\xe8\x90\xd6\xec\x47\xb4\x4d\xa6\xb4\x9b\x95\x95\xc5\x89\xdf\x27\xcc\xd3\xc5\x6a\xdd\x2d\xf7\x83\x3a\x9e\xb9\xd2\x22\xef\x29\xf1\xa4\xd6\x77\x8e\x7c\xea\xa6\xde\x27\x98\x1d\xcb\x6c\x44\x2d\xc4\x0c\xe8\x62\xcb\x58\xcd\xda\x29\x66\xc6\xe2\x5d\x65\x37\x56\x60\x79\x2c\x5a\x3f\xec\x5c\x28\xe8\xd4\x1d\xe7\xa9\x8d\xf4\x8c\x91\x1a\xdc\x2b\x97\x93\x93\x64\x0f\x39\xa3\xfc\x00\x11\xc6\xb3\x36\x4b\x81\xc6\x59\x23\xf4\x9a\xeb\x83\x85\xd7\x9a\xeb\x22\x8c\x8d\x35\x5c\x77\xd8\x90\xf1\x09\x6c\x50\x45\x61\x2e\x78\xfe\x77\x98\x78\xd9\x61\x37\xc8\x0e\xbb\xb4\x55\x68\xb0\x57\x58\xb2\xa3\xa0\x28\xde\x81\x97\xe3\x49\x29\x19\x6c\x57\x1a\xfc\x2f\x72\x5a\x89\x69\x99\x6f\xb3\xbe\xfb\x12\xd8\x7a\x49\x79\x41\xad\x11\xc1\xa8\xa7\x17\xb4\x32\x23\x3f\xea\x84\x9f\xf4\x29\x15\xd8\x54\x74\xd8\x9c\xef\x80\xc3\x07\xe3\x26\xc0\x37\x9b\xa1\x0d\x93\xb2\x4e\xba\xcb\xef\xbd\x00\xd7\x87\xf7\xab\x37\xbc\x94\x8f\x56\x65\xbe\xff\x78\x73\xc4\xc5\x60\xbe\x45\x8c\x83\x14\x79\xa3\x51\xd1\x27\x2c\xa5\xc2\x51\x8b\xc9\xb8\x5c\x72\xa5\xc9\x0a\xd5\x4b\xe5\xad\xda\x7c\xe9\xab\xcd\xc8\xd2\x1c\xed\x42\x70\x0a\x4b\x85\xfa\xf0\xaa\xe6\x7e\xa6\x36\xeb\x65\x33\x77\x1c\x12\x2d\xbf\x90\x67\x56\xf8\x4c\x2e\x7d\x90\x0f\x4d\x98\x2c\x03\xc5\xbb\xe0\xdf\x00\x00\x00\xff\xff\x4d\xf8\xeb\x18\x6e\x0b\x00\x00")

func logviewJsBytes() ([]byte, error) {
	return bindataRead(
		_logviewJs,
		"logview.js",
	)
}

func logviewJs() (*asset, error) {
	bytes, err := logviewJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "logview.js", size: 2926, mode: os.FileMode(420), modTime: time.Unix(1529144697, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8, 0x14, 0xf0, 0x2a, 0x99, 0x86, 0x7b, 0xd2, 0xa5, 0x1b, 0x4, 0x93, 0xc5, 0xe7, 0x25, 0x60, 0xda, 0x4b, 0x80, 0xa6, 0xc, 0x51, 0xc9, 0xe0, 0xf5, 0xe0, 0xa1, 0x24, 0x27, 0xd5, 0xba, 0x70}}
	return a, nil
}

var _navJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x56\xdf\x6f\xdb\x36\x10\x7e\xd7\x5f\xc1\xaa\x5e\x25\xad\xaa\x8c\xf5\x31\x82\x56\x74\x6d\x81\x04\xe8\xd6\x61\x59\xb1\x87\x34\xab\x69\xf1\x64\x71\xa3\x48\x83\xa4\xec\x0d\x81\xff\xf7\x81\xbf\xf4\xcb\x4e\x06\x6c\x0f\x09\x2c\xf2\xee\xbb\xef\x8e\x77\x1f\x49\xbb\xbd\x90\x1a\x3d\xac\x72\xb4\x5a\x9d\x50\x23\x45\x87\x92\x62\x4d\x44\xd7\x02\xdb\x83\x2c\xfe\x50\x49\x19\x45\xb5\xe0\x4a\xa3\x03\x66\x94\xbc\x13\x5c\x03\xd7\x0a\x55\xe8\x2e\x42\x28\xd9\x4a\x71\x54\xd0\xa8\x24\xb7\x5f\x4c\x6c\x95\x16\x12\xdc\x27\xe5\x82\x00\xd9\x2a\x8d\xb5\x37\x60\x62\x77\xa0\x70\x1c\x3e\x18\x1c\x80\xb9\x2f\x05\x5a\x53\xbe\x33\x86\xf7\x65\x14\x31\xd0\xa8\xee\xa5\xf4\x01\x6f\x08\xaa\x50\x92\x94\xc3\xfa\x0f\x3e\xf0\xcf\x58\xb7\x66\x6b\x3d\x12\xed\xf7\x04\x6b\x08\x8e\xcd\x4f\x00\x04\x8c\x7b\x2a\xf6\x5a\x65\xa8\xfa\x1e\x3d\x44\x08\x19\x20\x09\x8d\x04\xd5\x0e\x16\x0d\x66\x0a\xca\x08\x21\x07\x64\xea\x71\x8d\x55\x1b\x7c\xef\x92\xb0\x92\xdc\xa3\xaa\xaa\x90\x96\x3d\x64\x65\xe4\xd1\x38\x1c\xa7\x6c\x9d\x47\x1d\x56\x92\xfb\x72\xb4\x5b\xb0\xf7\xa6\x8b\xb4\x9c\x07\x6d\x50\x1a\xc2\x66\x96\xb9\x43\xe9\x50\x85\x8e\x94\x13\x71\x2c\x98\xa8\xb1\xa6\x82\x17\x2d\x56\x6d\xd1\x61\x5d\xb7\xe9\xfa\xf7\xe7\xe9\x97\xe3\xcb\x2c\xfd\xb2\x2e\xbe\xcd\xde\xac\xd6\x59\x69\x5d\x0d\x5c\x17\x70\xd0\x92\x73\x77\xf7\xdd\x7d\x39\x6e\x2d\x68\x76\x77\xaf\xfd\xee\x29\x32\x7f\x9e\xdd\x0c\xe3\x59\x55\xa1\x9e\x13\x68\x28\x07\x82\x5e\xbc\x40\x67\xbb\xb3\x53\x0d\x4c\x96\x47\x3d\xf5\x72\x21\x97\x67\x65\x6a\x5f\x46\x8e\x8a\x67\x31\xa3\x7b\x89\xc8\x99\xc1\xa3\x5c\x16\x99\x2f\x7c\xff\x8d\x91\xa7\x34\x33\x18\xd0\x6d\x6b\xed\x7b\xd5\x5e\x53\x33\x2b\x7f\xa3\x0a\x3d\x0b\x07\xec\x80\x55\x2b\x42\xf6\xe9\xc4\x30\x73\xe0\xa7\xa1\xd1\x77\xa0\x17\x3c\x53\xdb\xde\xcb\x04\x4a\x6f\xaf\xce\xec\x39\x1c\xdd\x2f\x37\x13\x17\x27\x27\x7d\x58\xe2\x5d\x05\xbf\x53\x56\x5a\x3a\xab\x55\x1a\x17\x1c\x1f\xbe\x7e\xd5\x78\x1b\x67\x45\x23\xe4\x07\x5c\xb7\xa9\xc6\xdb\xb7\x01\xdb\xfc\x2e\x30\x21\x1f\x0e\xc0\xf5\x47\xaa\x34\x70\x90\x69\x5c\x33\x5a\xff\x19\xe7\x08\x0e\xc1\x10\x21\x38\x14\x7b\x09\xc6\xee\x3d\x34\xb8\x67\x3a\x75\x43\x16\x8a\xb7\x68\x5a\x8b\xbc\x03\xfd\x56\x6b\x49\xb7\xbd\x86\x34\x69\x25\x34\x49\xb6\x18\x85\xd5\x3a\x1b\xda\xdb\xfe\x7b\x2c\xdd\x80\x7d\x35\x8b\x74\xca\xc2\xb1\xeb\x5e\x72\xaf\x15\x06\xc8\x56\x21\x1b\x4e\xc5\xbb\xdf\x42\x6d\x66\x12\x55\xa8\x1e\xb9\xba\x0c\x4d\x6f\x3c\x9b\xc9\x69\x41\x79\xcd\x7a\x02\x2a\x1d\x8c\xb3\xcc\x46\xd3\xad\x14\x47\xc3\x03\x7d\x90\x52\xc8\x74\x73\xc3\xad\xe7\x04\x35\x5e\x8d\x94\x4f\xf1\xc6\xd5\xca\xb3\x5c\xa5\x9b\x42\x39\x26\xaf\x5e\x4d\xed\x36\x99\x39\x39\xc7\x98\x2a\x4f\xf6\x16\x18\xd4\xda\x36\xf3\x94\xb4\x13\xc4\x49\x52\x13\x96\x45\xcd\xb0\x52\xe6\x3c\x0b\xb3\x88\x29\x57\x69\x32\x44\x54\x1e\x30\x19\xcb\x33\x69\x6e\xd3\xb0\xf3\x41\xb0\x45\x9d\x49\x34\x87\xe3\xb5\x84\x06\x55\x68\xf3\x7c\xf5\x30\x9b\xd7\xd3\x26\xe8\xe3\x42\x3d\xaa\x6a\x72\x31\x85\xb9\x0b\x40\x2f\x2b\x04\xbc\x16\x04\x3e\xff\x72\xf3\x4e\x74\x7b\xc1\xcd\x98\x2d\x5b\x3c\x2b\x24\xec\x19\xae\x21\x5d\x7f\xf3\xba\x59\xef\x68\x6e\xae\x98\x2c\x08\xce\xd0\x87\xbf\x52\xcd\xc0\x90\xfb\xa4\xb1\xec\xd1\x6f\xb0\xfd\x7c\x73\x85\x2e\x10\x1d\x9c\x3a\x41\x6e\x35\xd6\xc6\x69\x9a\xfb\x9b\x20\xe6\xad\x5b\x28\xcc\xa6\x33\xbc\x5a\x6e\x79\x6a\x76\xd7\x30\x22\xa2\xee\x3b\xe0\xba\xd0\x9e\x4d\x20\x66\x36\x43\xbc\xa2\xc6\x8c\xa5\x73\xa4\x1c\xf1\x9e\xb1\x7c\xb0\xcf\x43\x95\x5c\x0f\x3d\xd9\xa7\x33\xe5\x9c\x8a\x9b\x60\x50\x30\xb1\x4b\x37\xf4\x62\xa7\xce\x0a\x63\xbb\x75\x1c\xaa\x41\x3d\x67\x93\xe4\xaf\xe0\x47\xce\xff\x09\xed\x19\x15\xc5\x64\xa2\xf1\x76\xae\x12\xb1\x51\x89\x38\xb3\xfd\x32\x09\x35\x5e\x8e\xc6\x63\x6c\x6f\x4c\x48\x1a\xdb\x40\x54\x43\x37\xf6\x76\xec\x53\x38\x21\x60\x0a\x1e\x71\x96\xd0\x89\x03\x3c\xed\xef\xa5\x24\x64\xef\x87\xc8\xa8\x92\x6b\xb1\xe9\x1c\x5f\x68\x2f\x5b\x08\x6f\x33\xa9\x83\x0a\x3a\x34\xad\x85\x5f\xbc\x34\xbc\xb3\xb0\xd9\x58\x8c\x73\x17\x5b\x90\xb3\x51\x0f\xe9\x8c\x1e\x84\xaa\xbd\x11\x62\xab\xfc\xa9\x95\x32\xfb\x2b\x31\x52\xc0\x93\xec\x72\xfd\xce\xe3\x85\x1a\xfe\x9f\x90\x2d\x25\x04\x26\x31\x83\x7c\x97\x51\xe4\x47\xe3\xfc\x8a\x32\xaf\xaa\xba\xc5\x7c\x07\x71\xee\x6f\xd8\x27\x2e\xcb\x70\x95\x5f\xd9\xf7\x80\xbb\x1b\x1e\xc7\x7e\xff\xe9\x47\x8f\xf0\x51\x60\x02\xe4\x3f\x46\xc8\xd1\x83\xe0\xa0\x5a\xa1\xc7\xc5\x08\xfe\x72\xaf\xfb\xb9\x76\xe7\xe7\x72\x9f\x2f\x5f\x12\xf9\xf2\xa9\x70\x2a\xa3\x7f\x02\x00\x00\xff\xff\xd0\x52\x38\x60\x2c\x0c\x00\x00")

func navJsBytes() ([]byte, error) {
	return bindataRead(
		_navJs,
		"nav.js",
	)
}

func navJs() (*asset, error) {
	bytes, err := navJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "nav.js", size: 3116, mode: os.FileMode(420), modTime: time.Unix(1529144697, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xef, 0x52, 0xa, 0x28, 0x8e, 0xf5, 0xed, 0xaf, 0xe0, 0xc4, 0x9f, 0xa5, 0x62, 0xa, 0xbc, 0x48, 0x53, 0xa4, 0x18, 0x43, 0xbd, 0x2b, 0xcf, 0xf5, 0x5e, 0x28, 0x5e, 0x15, 0xde, 0xd9, 0xf7, 0x37}}
	return a, nil
}

var _stylesCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x57\x51\x6f\xe3\x36\x0c\x7e\xcf\xaf\x10\x6e\x18\xd0\xee\xa2\x43\xd2\x34\xbd\x9e\xfb\xb2\xbd\xdc\x9f\x18\x86\x40\x96\x68\x47\xa8\x2c\x1a\xb2\x92\x26\x1b\xfa\xdf\x07\x4b\x4e\x2c\xd9\x72\x93\xcb\x76\x6f\x89\x49\x7e\xa4\xc8\x8f\x14\x95\x19\x44\x4b\xfe\x99\x11\x42\xa9\x66\x7b\xba\x05\x59\x6e\x6d\x46\x56\x8b\xfa\xf0\xe2\xbe\x36\xc0\xad\x44\x4d\xb7\xc0\x04\x98\x5e\x61\x7d\x52\xa8\x98\xd4\xb4\x28\x29\x47\x85\x26\x23\xbf\x14\x05\xe7\x4f\x4f\x5e\x26\x98\x79\x8d\x65\x6c\x7d\x92\xa9\x16\x28\x16\x16\x1c\xc0\x0b\x39\x56\xf5\x59\xc0\x9e\x8a\x02\x44\x20\x70\xb0\x27\xe9\x4a\x70\xfe\xfc\x35\x88\x25\x8f\x20\x17\x3c\x0f\x62\x09\x64\xdf\xbe\x3d\x17\x5f\x59\x2f\x7b\x08\x85\xeb\xc7\xc7\xef\x8f\xab\x5e\xb8\x0a\x85\x0f\xcb\xe5\xf7\xe5\x1f\x2f\xb3\xf7\xd9\x2c\x47\x71\x9c\x13\x21\xf7\x73\x52\xcf\x49\x53\x33\x3d\x27\x52\xd7\x3b\x3b\x27\xdb\xe5\x9c\x58\x96\x2b\x98\x13\xeb\xd5\xec\x76\x4e\xac\x99\x13\x2b\x5c\xc6\x2b\x66\x4a\xa9\x33\xb2\x68\xdd\xd4\x4c\x08\xa9\x4b\xf7\xaf\xc3\x75\x4a\x39\xe3\xaf\xa5\xc1\x9d\x16\x27\xf7\x7b\x66\xee\x06\x27\xbd\x77\x36\xbf\x39\x83\x02\xb5\xa5\x05\xab\xa4\x3a\x66\xa4\x42\x8d\x4d\xcd\xb8\xcb\xaa\x93\x34\xf2\x6f\xc8\xc8\xf2\xb1\xad\xde\xfb\x6c\xf6\x25\xdf\x59\x8b\xda\x59\x0a\xd9\xd4\x8a\x1d\x33\x92\x2b\xe4\xaf\xad\xc5\xa9\xd8\x0f\x2b\x5f\x6c\x25\x35\xd0\xe1\xc7\x3e\x72\xd2\x71\x22\x47\x23\xc0\x64\x64\x59\x1f\x48\x83\x4a\x8a\x2e\xe6\xa8\x02\xf7\xc3\x90\x9e\xbd\xb1\x85\x83\xa5\x02\x38\x1a\xd6\xf2\x2e\x23\x1a\x35\x9c\x05\x4c\xc9\x52\x67\x84\x83\xb6\x60\xda\xaf\x5d\x52\x72\xc5\xda\x90\xdb\x13\x69\xb6\x77\xc7\xa9\xb1\x91\x1e\xa1\x90\x07\x4f\x1f\x8b\x75\x97\xee\x37\x29\xec\x36\x23\xcb\xc5\xe2\xd7\xf0\xa0\x3e\xce\xbe\x11\xee\x5f\x66\x61\x62\x0a\x05\x87\x17\xd2\x7b\x0d\x4a\x51\x84\xc7\x9a\x2a\xda\x30\x01\x5d\xb8\x9b\x8d\xb4\x50\x25\x6b\x10\x16\x61\x91\x2a\xc2\x62\x50\x84\x75\x7d\x20\xcb\xc5\x87\xa9\xfc\x49\xf1\x53\xaa\xb0\xc4\x9e\x83\x6f\x5d\x88\x39\x2a\x71\x09\xf4\xe1\x03\xd4\x06\x14\x70\x0b\x62\x1a\x39\x82\x1b\x0c\x88\x0f\xcf\x93\x68\xa2\x2f\xdd\xbc\x8b\xab\x71\xe2\xe0\xb9\x6b\xa9\xa3\x52\x82\x2e\x7d\xbd\x3c\xb7\x02\xc8\xc1\x51\x86\xa5\x8e\x34\xb7\xac\xf1\x03\x37\x98\x14\xde\x27\x67\x8a\xdf\x8d\x1c\x93\xcf\x5d\x30\xc9\x71\x7d\x1f\x9f\x6d\xb3\x09\xb0\x63\x72\xcf\x3e\x68\x9c\x74\x73\xe4\x78\x68\x3b\xd8\x91\xcf\x37\x3e\xcd\x71\xc4\xc9\x71\x93\xa5\x03\x1d\x11\xfc\x92\xf2\xa0\x91\xaf\xad\x34\xe9\x63\xb5\x16\xab\xcb\xb3\xaa\x4d\x1f\x47\x6d\x41\xdb\xcd\xc6\x8d\x75\x97\x3d\xf7\x8b\x2a\x76\xc4\x9d\x0d\xf2\xd5\x81\x73\x54\x8a\xd5\x0d\x64\xe4\xf4\x6b\x14\x72\x8b\xfb\xba\xdf\x4b\x78\xf3\x43\x2b\xca\x59\x2f\x4c\x8d\x88\xf3\x34\x1a\x0d\xf6\xf1\xd0\x88\xe6\xc3\xe2\xc6\xf3\x87\xa1\x64\x5b\xdc\x77\x0c\x9a\xca\x79\x7c\xc1\x0f\x30\x14\xcb\x41\x39\xf3\x2e\x1d\xab\x45\x1b\x2a\x89\x94\xf6\x4c\xed\x7c\x9e\xdb\xb3\xd2\xd2\xe0\x5b\x46\x96\xdd\xc5\x65\xf0\xad\x81\xa2\x09\xc8\x1c\x7f\xae\x99\x01\x6d\x85\x1c\x4b\x7a\xdf\x5d\x63\x29\x28\xec\x99\xa6\xf1\x7c\x1d\x70\xf7\xe1\x5c\x97\xd0\x91\xdd\x26\x82\x1c\x1a\x4d\xb7\x4a\x0c\xd7\xa0\xb1\x93\xc1\xdd\x06\xb9\xab\x15\x32\x91\x1a\x69\x89\xc4\x50\x1a\xa8\x8f\x63\x88\x2d\x40\x5b\x73\x1c\x25\xd8\x7d\xbd\x95\x21\x3d\x0c\x07\xa5\x26\xba\x22\x56\xa2\xd4\x1e\x6b\x08\xd9\xf4\x3c\xa5\xd8\xb6\x89\xef\xdc\x60\x9d\x30\x6d\x1c\x41\x6b\x3e\x4d\xfa\xd9\x49\x71\xd1\xfa\x71\xd2\xba\xfc\x4f\xd6\x35\x98\x6a\x53\xa1\xb8\x1c\xbf\xdf\xde\x53\x18\x15\x0a\x59\x48\x10\x1b\x2b\xab\xcb\x38\xcf\x93\x38\x9a\x39\xf3\x58\xc4\x26\x6f\xce\x69\x7a\x5c\x30\x97\xba\x6d\x47\x77\xd1\x24\xaf\xfe\x54\x8f\x8c\x17\xd2\x28\x2d\xa9\xfd\x34\x58\x1f\x15\x96\x7e\xf8\x54\x68\x60\x6a\x27\x1b\x5e\x6d\x83\x5b\x28\xb5\xaa\x0e\xf7\x94\xd1\xda\x33\xb9\xaf\x8d\xa2\xba\xa5\xb3\x12\xe8\x3b\x2d\xc0\xf8\xf4\x46\x2e\x4e\x3d\x1d\x1c\x73\x15\x26\xce\xef\x21\xa9\x0b\x23\x3a\xcf\x78\xb7\x18\x7b\xb9\x75\x46\x9c\x51\xce\x23\x62\xfc\x78\x19\xd2\x60\x64\x47\xe9\x55\x4d\xb0\x5c\x77\xb4\x69\x0f\x91\xac\x89\x07\x53\xb0\xef\x6e\x95\x24\x53\x2f\x58\x73\x66\xa1\x44\x73\xcc\xb2\x1c\x0a\xc7\x3c\xff\xce\x70\x1b\x47\x46\x3e\xfd\xf9\xe9\xe5\xaa\xf5\x77\x7c\x6f\x4f\x7b\x62\x85\x6d\x93\x1f\x3b\xfa\xeb\x66\x47\x93\x9e\xba\x41\x31\xcc\x17\x96\x13\x57\xfb\x48\x91\xb3\xf3\x64\x48\x56\xea\xf2\x7b\x42\x61\xe9\xea\xb3\xd9\xf4\x65\x4a\xb3\xb3\x53\x33\x4c\x48\x9c\x1a\x65\x01\xda\x79\x95\x48\x4c\x89\xd3\x03\x9f\xae\x4e\x4b\x57\xd8\x50\x9e\x95\xff\xdf\x63\xec\x47\xfb\xf3\xaa\x15\x70\xd8\xd1\x1f\x2c\xb6\x89\xc4\x64\x85\x34\x8d\xa5\x58\xf4\xf7\x73\x07\xe0\x07\xf6\x45\x8f\x29\x4c\xc5\xd2\x90\xa6\x7b\x76\xfd\x18\xa6\xab\x73\xc6\xb7\xc0\x5f\x41\x90\xcf\x24\x59\xdb\x9f\xfe\xea\xfc\xbd\x02\x21\x19\xb9\xab\xd8\x81\xfa\xb1\xb3\x6e\xef\xde\x7b\xe7\x3d\xbd\x84\x0c\x78\x49\xde\x53\x9a\xe5\xd5\x9a\xc1\x72\x31\xd6\x7f\x9f\xfd\x1b\x00\x00\xff\xff\xbc\x4c\x08\x3c\x28\x14\x00\x00")

func stylesCssBytes() ([]byte, error) {
	return bindataRead(
		_stylesCss,
		"styles.css",
	)
}

func stylesCss() (*asset, error) {
	bytes, err := stylesCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "styles.css", size: 5160, mode: os.FileMode(420), modTime: time.Unix(1529144697, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe1, 0x9d, 0x11, 0xe1, 0x4a, 0x60, 0xa8, 0x58, 0xb4, 0xd7, 0x93, 0xd5, 0xad, 0xd, 0x12, 0xb6, 0x99, 0x23, 0x3a, 0x4d, 0x31, 0x50, 0xcb, 0xa6, 0xa9, 0xe5, 0x77, 0x97, 0xbb, 0x3, 0xa0, 0x5f}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"api.js": apiJs,

	"app.js": appJs,

	"browsefs.js": browsefsJs,

	"domhelper.js": domhelperJs,

	"format.js": formatJs,

	"index.html": indexHtml,

	"loglevel.js": loglevelJs,

	"logview.js": logviewJs,

	"nav.js": navJs,

	"styles.css": stylesCss,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"api.js":       &bintree{apiJs, map[string]*bintree{}},
	"app.js":       &bintree{appJs, map[string]*bintree{}},
	"browsefs.js":  &bintree{browsefsJs, map[string]*bintree{}},
	"domhelper.js": &bintree{domhelperJs, map[string]*bintree{}},
	"format.js":    &bintree{formatJs, map[string]*bintree{}},
	"index.html":   &bintree{indexHtml, map[string]*bintree{}},
	"loglevel.js":  &bintree{loglevelJs, map[string]*bintree{}},
	"logview.js":   &bintree{logviewJs, map[string]*bintree{}},
	"nav.js":       &bintree{navJs, map[string]*bintree{}},
	"styles.css":   &bintree{stylesCss, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
