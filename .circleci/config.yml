version: 2
jobenv: &jobenv
  working_directory: ~/nyaxt/otaru
  parallelism: 1
  shell: /bin/bash --login
  docker:
  - image: circleci/buildpack-deps:curl

jobs:
  build:
    <<: *jobenv
    steps:
      - checkout
      - setup_remote_docker
      - run: docker info
      - run: if [[ ! -d ./otaru-testconf ]]; then echo $TESTCONFTGZ | base64 -d | tar xzf - ; fi
      - run: OTARUDIR=./otaru-testconf scripts/update_version.bash
      - run: docker build -t otaru .
      - run: docker create -e "OTARUDIR=/otaru-testconf" -e "SKIP_FUSE_TEST=1" -v /otaru-testconf --name otaru-w-testconf otaru go test ./...
      - run: docker cp `pwd`/otaru-testconf/. otaru-w-testconf:/otaru-testconf
      - run: docker start -a otaru-w-testconf
      - run: mkdir -p /tmp/workspace/otaru-bin
      - run: docker cp otaru-w-testconf:/out/. /tmp/workspace/otaru-bin/
      - run: docker rm otaru-w-testconf
      - run: /tmp/workspace/otaru-bin/otaru-server -version || true
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - otaru-bin
  deploy:
    <<: *jobenv
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: /tmp/workspace/otaru-bin/otaru-server -version || true
      - run: echo $SVCACCJSON > svcacc.json
      - run: gcloud auth activate-service-account --key-file=svcacc.json
      - run: (cd /tmp/workspace && tar zcvf otaru-bin.tar.gz otaru-bin)
      - run: gsutil cp /tmp/workspace/otaru-bin.tar.gz gs://otaru-release/
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
