// Code generated by protoc-gen-go. DO NOT EDIT.
// source: otaru.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	otaru.proto

It has these top-level messages:
	ListDirRequest
	ListDirResponse
	CreateFileRequest
	CreateFileResponse
	WriteFileRequest
	WriteFileResponse
	GetBlobstoreConfigRequest
	GetBlobstoreConfigResponse
	ReduceCacheRequest
	ReduceCacheResponse
	GetEntriesRequest
	GetEntriesResponse
	GetINodeDBStatsRequest
	GetINodeDBStatsResponse
	GetCategoriesRequest
	LoggerCategory
	GetCategoriesResponse
	SetCategoryRequest
	SetCategoryResponse
	QueryLogsRequest
	QueryLogsResponse
	GetLatestLogEntryIdRequest
	GetLatestLogEntryIdResponse
	GetSystemInfoRequest
	SystemInfoResponse
	GetVersionRequest
	VersionResponse
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ListDirRequest struct {
	Path string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
}

func (m *ListDirRequest) Reset()                    { *m = ListDirRequest{} }
func (m *ListDirRequest) String() string            { return proto.CompactTextString(m) }
func (*ListDirRequest) ProtoMessage()               {}
func (*ListDirRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ListDirRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type ListDirResponse struct {
	Entry []*ListDirResponse_Entry `protobuf:"bytes,1,rep,name=entry" json:"entry,omitempty"`
}

func (m *ListDirResponse) Reset()                    { *m = ListDirResponse{} }
func (m *ListDirResponse) String() string            { return proto.CompactTextString(m) }
func (*ListDirResponse) ProtoMessage()               {}
func (*ListDirResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ListDirResponse) GetEntry() []*ListDirResponse_Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type ListDirResponse_Entry struct {
	Id           uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Type         string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Size         int64  `protobuf:"varint,4,opt,name=size" json:"size,omitempty"`
	Uid          uint32 `protobuf:"varint,5,opt,name=uid" json:"uid,omitempty"`
	Gid          uint32 `protobuf:"varint,6,opt,name=gid" json:"gid,omitempty"`
	PermMode     uint32 `protobuf:"varint,7,opt,name=perm_mode,json=permMode" json:"perm_mode,omitempty"`
	ModifiedTime int64  `protobuf:"varint,8,opt,name=modified_time,json=modifiedTime" json:"modified_time,omitempty"`
}

func (m *ListDirResponse_Entry) Reset()                    { *m = ListDirResponse_Entry{} }
func (m *ListDirResponse_Entry) String() string            { return proto.CompactTextString(m) }
func (*ListDirResponse_Entry) ProtoMessage()               {}
func (*ListDirResponse_Entry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *ListDirResponse_Entry) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ListDirResponse_Entry) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListDirResponse_Entry) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ListDirResponse_Entry) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ListDirResponse_Entry) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *ListDirResponse_Entry) GetGid() uint32 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func (m *ListDirResponse_Entry) GetPermMode() uint32 {
	if m != nil {
		return m.PermMode
	}
	return 0
}

func (m *ListDirResponse_Entry) GetModifiedTime() int64 {
	if m != nil {
		return m.ModifiedTime
	}
	return 0
}

type CreateFileRequest struct {
	// If |dir_id| == 0, then treat |name| as fullpath.
	DirId        uint64 `protobuf:"varint,1,opt,name=dir_id,json=dirId" json:"dir_id,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Uid          uint32 `protobuf:"varint,3,opt,name=uid" json:"uid,omitempty"`
	Gid          uint32 `protobuf:"varint,4,opt,name=gid" json:"gid,omitempty"`
	PermMode     uint32 `protobuf:"varint,5,opt,name=perm_mode,json=permMode" json:"perm_mode,omitempty"`
	ModifiedTime int64  `protobuf:"varint,6,opt,name=modified_time,json=modifiedTime" json:"modified_time,omitempty"`
}

func (m *CreateFileRequest) Reset()                    { *m = CreateFileRequest{} }
func (m *CreateFileRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateFileRequest) ProtoMessage()               {}
func (*CreateFileRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateFileRequest) GetDirId() uint64 {
	if m != nil {
		return m.DirId
	}
	return 0
}

func (m *CreateFileRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateFileRequest) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *CreateFileRequest) GetGid() uint32 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func (m *CreateFileRequest) GetPermMode() uint32 {
	if m != nil {
		return m.PermMode
	}
	return 0
}

func (m *CreateFileRequest) GetModifiedTime() int64 {
	if m != nil {
		return m.ModifiedTime
	}
	return 0
}

type CreateFileResponse struct {
	Id        uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	IsNewFile bool   `protobuf:"varint,2,opt,name=is_new_file,json=isNewFile" json:"is_new_file,omitempty"`
}

func (m *CreateFileResponse) Reset()                    { *m = CreateFileResponse{} }
func (m *CreateFileResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateFileResponse) ProtoMessage()               {}
func (*CreateFileResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CreateFileResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CreateFileResponse) GetIsNewFile() bool {
	if m != nil {
		return m.IsNewFile
	}
	return false
}

type WriteFileRequest struct {
	Id     uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Offset uint64 `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	Body   []byte `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
}

func (m *WriteFileRequest) Reset()                    { *m = WriteFileRequest{} }
func (m *WriteFileRequest) String() string            { return proto.CompactTextString(m) }
func (*WriteFileRequest) ProtoMessage()               {}
func (*WriteFileRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *WriteFileRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *WriteFileRequest) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *WriteFileRequest) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type WriteFileResponse struct {
}

func (m *WriteFileResponse) Reset()                    { *m = WriteFileResponse{} }
func (m *WriteFileResponse) String() string            { return proto.CompactTextString(m) }
func (*WriteFileResponse) ProtoMessage()               {}
func (*WriteFileResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type GetBlobstoreConfigRequest struct {
}

func (m *GetBlobstoreConfigRequest) Reset()                    { *m = GetBlobstoreConfigRequest{} }
func (m *GetBlobstoreConfigRequest) String() string            { return proto.CompactTextString(m) }
func (*GetBlobstoreConfigRequest) ProtoMessage()               {}
func (*GetBlobstoreConfigRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type GetBlobstoreConfigResponse struct {
	BackendImplName string `protobuf:"bytes,1,opt,name=backend_impl_name,json=backendImplName" json:"backend_impl_name,omitempty"`
	BackendFlags    string `protobuf:"bytes,2,opt,name=backend_flags,json=backendFlags" json:"backend_flags,omitempty"`
	CacheImplName   string `protobuf:"bytes,3,opt,name=cache_impl_name,json=cacheImplName" json:"cache_impl_name,omitempty"`
	CacheFlags      string `protobuf:"bytes,4,opt,name=cache_flags,json=cacheFlags" json:"cache_flags,omitempty"`
}

func (m *GetBlobstoreConfigResponse) Reset()                    { *m = GetBlobstoreConfigResponse{} }
func (m *GetBlobstoreConfigResponse) String() string            { return proto.CompactTextString(m) }
func (*GetBlobstoreConfigResponse) ProtoMessage()               {}
func (*GetBlobstoreConfigResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GetBlobstoreConfigResponse) GetBackendImplName() string {
	if m != nil {
		return m.BackendImplName
	}
	return ""
}

func (m *GetBlobstoreConfigResponse) GetBackendFlags() string {
	if m != nil {
		return m.BackendFlags
	}
	return ""
}

func (m *GetBlobstoreConfigResponse) GetCacheImplName() string {
	if m != nil {
		return m.CacheImplName
	}
	return ""
}

func (m *GetBlobstoreConfigResponse) GetCacheFlags() string {
	if m != nil {
		return m.CacheFlags
	}
	return ""
}

type ReduceCacheRequest struct {
	DryRun      bool   `protobuf:"varint,1,opt,name=dry_run,json=dryRun" json:"dry_run,omitempty"`
	DesiredSize string `protobuf:"bytes,2,opt,name=desired_size,json=desiredSize" json:"desired_size,omitempty"`
}

func (m *ReduceCacheRequest) Reset()                    { *m = ReduceCacheRequest{} }
func (m *ReduceCacheRequest) String() string            { return proto.CompactTextString(m) }
func (*ReduceCacheRequest) ProtoMessage()               {}
func (*ReduceCacheRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ReduceCacheRequest) GetDryRun() bool {
	if m != nil {
		return m.DryRun
	}
	return false
}

func (m *ReduceCacheRequest) GetDesiredSize() string {
	if m != nil {
		return m.DesiredSize
	}
	return ""
}

type ReduceCacheResponse struct {
	Success      bool   `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage" json:"error_message,omitempty"`
}

func (m *ReduceCacheResponse) Reset()                    { *m = ReduceCacheResponse{} }
func (m *ReduceCacheResponse) String() string            { return proto.CompactTextString(m) }
func (*ReduceCacheResponse) ProtoMessage()               {}
func (*ReduceCacheResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ReduceCacheResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ReduceCacheResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

type GetEntriesRequest struct {
}

func (m *GetEntriesRequest) Reset()                    { *m = GetEntriesRequest{} }
func (m *GetEntriesRequest) String() string            { return proto.CompactTextString(m) }
func (*GetEntriesRequest) ProtoMessage()               {}
func (*GetEntriesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type GetEntriesResponse struct {
	Entry []*GetEntriesResponse_Entry `protobuf:"bytes,1,rep,name=entry" json:"entry,omitempty"`
}

func (m *GetEntriesResponse) Reset()                    { *m = GetEntriesResponse{} }
func (m *GetEntriesResponse) String() string            { return proto.CompactTextString(m) }
func (*GetEntriesResponse) ProtoMessage()               {}
func (*GetEntriesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *GetEntriesResponse) GetEntry() []*GetEntriesResponse_Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type GetEntriesResponse_Entry struct {
	BlobPath              string `protobuf:"bytes,1,opt,name=blob_path,json=blobPath" json:"blob_path,omitempty"`
	State                 string `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`
	BlobLen               int64  `protobuf:"varint,3,opt,name=blob_len,json=blobLen" json:"blob_len,omitempty"`
	ValidLen              int64  `protobuf:"varint,4,opt,name=valid_len,json=validLen" json:"valid_len,omitempty"`
	SyncCount             int64  `protobuf:"varint,5,opt,name=sync_count,json=syncCount" json:"sync_count,omitempty"`
	LastUsed              int64  `protobuf:"varint,6,opt,name=last_used,json=lastUsed" json:"last_used,omitempty"`
	LastWrite             int64  `protobuf:"varint,7,opt,name=last_write,json=lastWrite" json:"last_write,omitempty"`
	LastSync              int64  `protobuf:"varint,8,opt,name=last_sync,json=lastSync" json:"last_sync,omitempty"`
	NumberOfWriterHandles int64  `protobuf:"varint,9,opt,name=number_of_writer_handles,json=numberOfWriterHandles" json:"number_of_writer_handles,omitempty"`
	NumberOfHandles       int64  `protobuf:"varint,10,opt,name=number_of_handles,json=numberOfHandles" json:"number_of_handles,omitempty"`
}

func (m *GetEntriesResponse_Entry) Reset()                    { *m = GetEntriesResponse_Entry{} }
func (m *GetEntriesResponse_Entry) String() string            { return proto.CompactTextString(m) }
func (*GetEntriesResponse_Entry) ProtoMessage()               {}
func (*GetEntriesResponse_Entry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11, 0} }

func (m *GetEntriesResponse_Entry) GetBlobPath() string {
	if m != nil {
		return m.BlobPath
	}
	return ""
}

func (m *GetEntriesResponse_Entry) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *GetEntriesResponse_Entry) GetBlobLen() int64 {
	if m != nil {
		return m.BlobLen
	}
	return 0
}

func (m *GetEntriesResponse_Entry) GetValidLen() int64 {
	if m != nil {
		return m.ValidLen
	}
	return 0
}

func (m *GetEntriesResponse_Entry) GetSyncCount() int64 {
	if m != nil {
		return m.SyncCount
	}
	return 0
}

func (m *GetEntriesResponse_Entry) GetLastUsed() int64 {
	if m != nil {
		return m.LastUsed
	}
	return 0
}

func (m *GetEntriesResponse_Entry) GetLastWrite() int64 {
	if m != nil {
		return m.LastWrite
	}
	return 0
}

func (m *GetEntriesResponse_Entry) GetLastSync() int64 {
	if m != nil {
		return m.LastSync
	}
	return 0
}

func (m *GetEntriesResponse_Entry) GetNumberOfWriterHandles() int64 {
	if m != nil {
		return m.NumberOfWriterHandles
	}
	return 0
}

func (m *GetEntriesResponse_Entry) GetNumberOfHandles() int64 {
	if m != nil {
		return m.NumberOfHandles
	}
	return 0
}

type GetINodeDBStatsRequest struct {
}

func (m *GetINodeDBStatsRequest) Reset()                    { *m = GetINodeDBStatsRequest{} }
func (m *GetINodeDBStatsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetINodeDBStatsRequest) ProtoMessage()               {}
func (*GetINodeDBStatsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

type GetINodeDBStatsResponse struct {
	LastSync          int64  `protobuf:"varint,1,opt,name=last_sync,json=lastSync" json:"last_sync,omitempty"`
	LastTx            int64  `protobuf:"varint,2,opt,name=last_tx,json=lastTx" json:"last_tx,omitempty"`
	LastId            uint64 `protobuf:"varint,3,opt,name=last_id,json=lastId" json:"last_id,omitempty"`
	Version           uint64 `protobuf:"varint,4,opt,name=version" json:"version,omitempty"`
	LastTicket        uint64 `protobuf:"varint,5,opt,name=last_ticket,json=lastTicket" json:"last_ticket,omitempty"`
	NumberOfNodeLocks uint32 `protobuf:"varint,6,opt,name=number_of_node_locks,json=numberOfNodeLocks" json:"number_of_node_locks,omitempty"`
}

func (m *GetINodeDBStatsResponse) Reset()                    { *m = GetINodeDBStatsResponse{} }
func (m *GetINodeDBStatsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetINodeDBStatsResponse) ProtoMessage()               {}
func (*GetINodeDBStatsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *GetINodeDBStatsResponse) GetLastSync() int64 {
	if m != nil {
		return m.LastSync
	}
	return 0
}

func (m *GetINodeDBStatsResponse) GetLastTx() int64 {
	if m != nil {
		return m.LastTx
	}
	return 0
}

func (m *GetINodeDBStatsResponse) GetLastId() uint64 {
	if m != nil {
		return m.LastId
	}
	return 0
}

func (m *GetINodeDBStatsResponse) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *GetINodeDBStatsResponse) GetLastTicket() uint64 {
	if m != nil {
		return m.LastTicket
	}
	return 0
}

func (m *GetINodeDBStatsResponse) GetNumberOfNodeLocks() uint32 {
	if m != nil {
		return m.NumberOfNodeLocks
	}
	return 0
}

type GetCategoriesRequest struct {
}

func (m *GetCategoriesRequest) Reset()                    { *m = GetCategoriesRequest{} }
func (m *GetCategoriesRequest) String() string            { return proto.CompactTextString(m) }
func (*GetCategoriesRequest) ProtoMessage()               {}
func (*GetCategoriesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

type LoggerCategory struct {
	Category string `protobuf:"bytes,1,opt,name=category" json:"category,omitempty"`
	Level    uint32 `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
}

func (m *LoggerCategory) Reset()                    { *m = LoggerCategory{} }
func (m *LoggerCategory) String() string            { return proto.CompactTextString(m) }
func (*LoggerCategory) ProtoMessage()               {}
func (*LoggerCategory) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *LoggerCategory) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *LoggerCategory) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

type GetCategoriesResponse struct {
	Category []*LoggerCategory `protobuf:"bytes,1,rep,name=category" json:"category,omitempty"`
}

func (m *GetCategoriesResponse) Reset()                    { *m = GetCategoriesResponse{} }
func (m *GetCategoriesResponse) String() string            { return proto.CompactTextString(m) }
func (*GetCategoriesResponse) ProtoMessage()               {}
func (*GetCategoriesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *GetCategoriesResponse) GetCategory() []*LoggerCategory {
	if m != nil {
		return m.Category
	}
	return nil
}

type SetCategoryRequest struct {
	Category string `protobuf:"bytes,1,opt,name=category" json:"category,omitempty"`
	Level    uint32 `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
}

func (m *SetCategoryRequest) Reset()                    { *m = SetCategoryRequest{} }
func (m *SetCategoryRequest) String() string            { return proto.CompactTextString(m) }
func (*SetCategoryRequest) ProtoMessage()               {}
func (*SetCategoryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *SetCategoryRequest) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *SetCategoryRequest) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

type SetCategoryResponse struct {
}

func (m *SetCategoryResponse) Reset()                    { *m = SetCategoryResponse{} }
func (m *SetCategoryResponse) String() string            { return proto.CompactTextString(m) }
func (*SetCategoryResponse) ProtoMessage()               {}
func (*SetCategoryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

type QueryLogsRequest struct {
	MinId    uint32   `protobuf:"varint,1,opt,name=min_id,json=minId" json:"min_id,omitempty"`
	Category []string `protobuf:"bytes,2,rep,name=category" json:"category,omitempty"`
	Limit    uint32   `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
}

func (m *QueryLogsRequest) Reset()                    { *m = QueryLogsRequest{} }
func (m *QueryLogsRequest) String() string            { return proto.CompactTextString(m) }
func (*QueryLogsRequest) ProtoMessage()               {}
func (*QueryLogsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *QueryLogsRequest) GetMinId() uint32 {
	if m != nil {
		return m.MinId
	}
	return 0
}

func (m *QueryLogsRequest) GetCategory() []string {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *QueryLogsRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type QueryLogsResponse struct {
	Entry []*QueryLogsResponse_Entry `protobuf:"bytes,1,rep,name=entry" json:"entry,omitempty"`
}

func (m *QueryLogsResponse) Reset()                    { *m = QueryLogsResponse{} }
func (m *QueryLogsResponse) String() string            { return proto.CompactTextString(m) }
func (*QueryLogsResponse) ProtoMessage()               {}
func (*QueryLogsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *QueryLogsResponse) GetEntry() []*QueryLogsResponse_Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type QueryLogsResponse_Entry struct {
	Id       uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Log      string `protobuf:"bytes,2,opt,name=log" json:"log,omitempty"`
	Category string `protobuf:"bytes,3,opt,name=category" json:"category,omitempty"`
	Level    uint32 `protobuf:"varint,4,opt,name=level" json:"level,omitempty"`
	Time     int64  `protobuf:"varint,5,opt,name=time" json:"time,omitempty"`
	Location string `protobuf:"bytes,6,opt,name=location" json:"location,omitempty"`
}

func (m *QueryLogsResponse_Entry) Reset()                    { *m = QueryLogsResponse_Entry{} }
func (m *QueryLogsResponse_Entry) String() string            { return proto.CompactTextString(m) }
func (*QueryLogsResponse_Entry) ProtoMessage()               {}
func (*QueryLogsResponse_Entry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20, 0} }

func (m *QueryLogsResponse_Entry) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *QueryLogsResponse_Entry) GetLog() string {
	if m != nil {
		return m.Log
	}
	return ""
}

func (m *QueryLogsResponse_Entry) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *QueryLogsResponse_Entry) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *QueryLogsResponse_Entry) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *QueryLogsResponse_Entry) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

type GetLatestLogEntryIdRequest struct {
}

func (m *GetLatestLogEntryIdRequest) Reset()                    { *m = GetLatestLogEntryIdRequest{} }
func (m *GetLatestLogEntryIdRequest) String() string            { return proto.CompactTextString(m) }
func (*GetLatestLogEntryIdRequest) ProtoMessage()               {}
func (*GetLatestLogEntryIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

type GetLatestLogEntryIdResponse struct {
	Id uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetLatestLogEntryIdResponse) Reset()                    { *m = GetLatestLogEntryIdResponse{} }
func (m *GetLatestLogEntryIdResponse) String() string            { return proto.CompactTextString(m) }
func (*GetLatestLogEntryIdResponse) ProtoMessage()               {}
func (*GetLatestLogEntryIdResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *GetLatestLogEntryIdResponse) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetSystemInfoRequest struct {
}

func (m *GetSystemInfoRequest) Reset()                    { *m = GetSystemInfoRequest{} }
func (m *GetSystemInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*GetSystemInfoRequest) ProtoMessage()               {}
func (*GetSystemInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

type SystemInfoResponse struct {
	GoVersion    string `protobuf:"bytes,1,opt,name=go_version,json=goVersion" json:"go_version,omitempty"`
	Os           string `protobuf:"bytes,2,opt,name=os" json:"os,omitempty"`
	Arch         string `protobuf:"bytes,3,opt,name=arch" json:"arch,omitempty"`
	NumGoroutine uint32 `protobuf:"varint,4,opt,name=num_goroutine,json=numGoroutine" json:"num_goroutine,omitempty"`
	Hostname     string `protobuf:"bytes,5,opt,name=hostname" json:"hostname,omitempty"`
	Pid          uint64 `protobuf:"varint,6,opt,name=pid" json:"pid,omitempty"`
	Uid          uint64 `protobuf:"varint,7,opt,name=uid" json:"uid,omitempty"`
	MemAlloc     uint64 `protobuf:"varint,8,opt,name=mem_alloc,json=memAlloc" json:"mem_alloc,omitempty"`
	MemSys       uint64 `protobuf:"varint,9,opt,name=mem_sys,json=memSys" json:"mem_sys,omitempty"`
	NumGc        uint32 `protobuf:"varint,10,opt,name=num_gc,json=numGc" json:"num_gc,omitempty"`
	NumFds       uint32 `protobuf:"varint,11,opt,name=num_fds,json=numFds" json:"num_fds,omitempty"`
}

func (m *SystemInfoResponse) Reset()                    { *m = SystemInfoResponse{} }
func (m *SystemInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*SystemInfoResponse) ProtoMessage()               {}
func (*SystemInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *SystemInfoResponse) GetGoVersion() string {
	if m != nil {
		return m.GoVersion
	}
	return ""
}

func (m *SystemInfoResponse) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

func (m *SystemInfoResponse) GetArch() string {
	if m != nil {
		return m.Arch
	}
	return ""
}

func (m *SystemInfoResponse) GetNumGoroutine() uint32 {
	if m != nil {
		return m.NumGoroutine
	}
	return 0
}

func (m *SystemInfoResponse) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *SystemInfoResponse) GetPid() uint64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *SystemInfoResponse) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *SystemInfoResponse) GetMemAlloc() uint64 {
	if m != nil {
		return m.MemAlloc
	}
	return 0
}

func (m *SystemInfoResponse) GetMemSys() uint64 {
	if m != nil {
		return m.MemSys
	}
	return 0
}

func (m *SystemInfoResponse) GetNumGc() uint32 {
	if m != nil {
		return m.NumGc
	}
	return 0
}

func (m *SystemInfoResponse) GetNumFds() uint32 {
	if m != nil {
		return m.NumFds
	}
	return 0
}

type GetVersionRequest struct {
}

func (m *GetVersionRequest) Reset()                    { *m = GetVersionRequest{} }
func (m *GetVersionRequest) String() string            { return proto.CompactTextString(m) }
func (*GetVersionRequest) ProtoMessage()               {}
func (*GetVersionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

type VersionResponse struct {
	GitCommit string `protobuf:"bytes,1,opt,name=git_commit,json=gitCommit" json:"git_commit,omitempty"`
	BuildHost string `protobuf:"bytes,2,opt,name=build_host,json=buildHost" json:"build_host,omitempty"`
	BuildTime string `protobuf:"bytes,3,opt,name=build_time,json=buildTime" json:"build_time,omitempty"`
}

func (m *VersionResponse) Reset()                    { *m = VersionResponse{} }
func (m *VersionResponse) String() string            { return proto.CompactTextString(m) }
func (*VersionResponse) ProtoMessage()               {}
func (*VersionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *VersionResponse) GetGitCommit() string {
	if m != nil {
		return m.GitCommit
	}
	return ""
}

func (m *VersionResponse) GetBuildHost() string {
	if m != nil {
		return m.BuildHost
	}
	return ""
}

func (m *VersionResponse) GetBuildTime() string {
	if m != nil {
		return m.BuildTime
	}
	return ""
}

func init() {
	proto.RegisterType((*ListDirRequest)(nil), "pb.ListDirRequest")
	proto.RegisterType((*ListDirResponse)(nil), "pb.ListDirResponse")
	proto.RegisterType((*ListDirResponse_Entry)(nil), "pb.ListDirResponse.Entry")
	proto.RegisterType((*CreateFileRequest)(nil), "pb.CreateFileRequest")
	proto.RegisterType((*CreateFileResponse)(nil), "pb.CreateFileResponse")
	proto.RegisterType((*WriteFileRequest)(nil), "pb.WriteFileRequest")
	proto.RegisterType((*WriteFileResponse)(nil), "pb.WriteFileResponse")
	proto.RegisterType((*GetBlobstoreConfigRequest)(nil), "pb.GetBlobstoreConfigRequest")
	proto.RegisterType((*GetBlobstoreConfigResponse)(nil), "pb.GetBlobstoreConfigResponse")
	proto.RegisterType((*ReduceCacheRequest)(nil), "pb.ReduceCacheRequest")
	proto.RegisterType((*ReduceCacheResponse)(nil), "pb.ReduceCacheResponse")
	proto.RegisterType((*GetEntriesRequest)(nil), "pb.GetEntriesRequest")
	proto.RegisterType((*GetEntriesResponse)(nil), "pb.GetEntriesResponse")
	proto.RegisterType((*GetEntriesResponse_Entry)(nil), "pb.GetEntriesResponse.Entry")
	proto.RegisterType((*GetINodeDBStatsRequest)(nil), "pb.GetINodeDBStatsRequest")
	proto.RegisterType((*GetINodeDBStatsResponse)(nil), "pb.GetINodeDBStatsResponse")
	proto.RegisterType((*GetCategoriesRequest)(nil), "pb.GetCategoriesRequest")
	proto.RegisterType((*LoggerCategory)(nil), "pb.LoggerCategory")
	proto.RegisterType((*GetCategoriesResponse)(nil), "pb.GetCategoriesResponse")
	proto.RegisterType((*SetCategoryRequest)(nil), "pb.SetCategoryRequest")
	proto.RegisterType((*SetCategoryResponse)(nil), "pb.SetCategoryResponse")
	proto.RegisterType((*QueryLogsRequest)(nil), "pb.QueryLogsRequest")
	proto.RegisterType((*QueryLogsResponse)(nil), "pb.QueryLogsResponse")
	proto.RegisterType((*QueryLogsResponse_Entry)(nil), "pb.QueryLogsResponse.Entry")
	proto.RegisterType((*GetLatestLogEntryIdRequest)(nil), "pb.GetLatestLogEntryIdRequest")
	proto.RegisterType((*GetLatestLogEntryIdResponse)(nil), "pb.GetLatestLogEntryIdResponse")
	proto.RegisterType((*GetSystemInfoRequest)(nil), "pb.GetSystemInfoRequest")
	proto.RegisterType((*SystemInfoResponse)(nil), "pb.SystemInfoResponse")
	proto.RegisterType((*GetVersionRequest)(nil), "pb.GetVersionRequest")
	proto.RegisterType((*VersionResponse)(nil), "pb.VersionResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for FileSystemService service

type FileSystemServiceClient interface {
	ListDir(ctx context.Context, in *ListDirRequest, opts ...grpc.CallOption) (*ListDirResponse, error)
	CreateFile(ctx context.Context, in *CreateFileRequest, opts ...grpc.CallOption) (*CreateFileResponse, error)
	WriteFile(ctx context.Context, in *WriteFileRequest, opts ...grpc.CallOption) (*WriteFileResponse, error)
}

type fileSystemServiceClient struct {
	cc *grpc.ClientConn
}

func NewFileSystemServiceClient(cc *grpc.ClientConn) FileSystemServiceClient {
	return &fileSystemServiceClient{cc}
}

func (c *fileSystemServiceClient) ListDir(ctx context.Context, in *ListDirRequest, opts ...grpc.CallOption) (*ListDirResponse, error) {
	out := new(ListDirResponse)
	err := grpc.Invoke(ctx, "/pb.FileSystemService/ListDir", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileSystemServiceClient) CreateFile(ctx context.Context, in *CreateFileRequest, opts ...grpc.CallOption) (*CreateFileResponse, error) {
	out := new(CreateFileResponse)
	err := grpc.Invoke(ctx, "/pb.FileSystemService/CreateFile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileSystemServiceClient) WriteFile(ctx context.Context, in *WriteFileRequest, opts ...grpc.CallOption) (*WriteFileResponse, error) {
	out := new(WriteFileResponse)
	err := grpc.Invoke(ctx, "/pb.FileSystemService/WriteFile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for FileSystemService service

type FileSystemServiceServer interface {
	ListDir(context.Context, *ListDirRequest) (*ListDirResponse, error)
	CreateFile(context.Context, *CreateFileRequest) (*CreateFileResponse, error)
	WriteFile(context.Context, *WriteFileRequest) (*WriteFileResponse, error)
}

func RegisterFileSystemServiceServer(s *grpc.Server, srv FileSystemServiceServer) {
	s.RegisterService(&_FileSystemService_serviceDesc, srv)
}

func _FileSystemService_ListDir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDirRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSystemServiceServer).ListDir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FileSystemService/ListDir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSystemServiceServer).ListDir(ctx, req.(*ListDirRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileSystemService_CreateFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSystemServiceServer).CreateFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FileSystemService/CreateFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSystemServiceServer).CreateFile(ctx, req.(*CreateFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FileSystemService_WriteFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileSystemServiceServer).WriteFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FileSystemService/WriteFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileSystemServiceServer).WriteFile(ctx, req.(*WriteFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FileSystemService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.FileSystemService",
	HandlerType: (*FileSystemServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListDir",
			Handler:    _FileSystemService_ListDir_Handler,
		},
		{
			MethodName: "CreateFile",
			Handler:    _FileSystemService_CreateFile_Handler,
		},
		{
			MethodName: "WriteFile",
			Handler:    _FileSystemService_WriteFile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "otaru.proto",
}

// Client API for BlobstoreService service

type BlobstoreServiceClient interface {
	GetConfig(ctx context.Context, in *GetBlobstoreConfigRequest, opts ...grpc.CallOption) (*GetBlobstoreConfigResponse, error)
	GetEntries(ctx context.Context, in *GetEntriesRequest, opts ...grpc.CallOption) (*GetEntriesResponse, error)
	ReduceCache(ctx context.Context, in *ReduceCacheRequest, opts ...grpc.CallOption) (*ReduceCacheResponse, error)
}

type blobstoreServiceClient struct {
	cc *grpc.ClientConn
}

func NewBlobstoreServiceClient(cc *grpc.ClientConn) BlobstoreServiceClient {
	return &blobstoreServiceClient{cc}
}

func (c *blobstoreServiceClient) GetConfig(ctx context.Context, in *GetBlobstoreConfigRequest, opts ...grpc.CallOption) (*GetBlobstoreConfigResponse, error) {
	out := new(GetBlobstoreConfigResponse)
	err := grpc.Invoke(ctx, "/pb.BlobstoreService/GetConfig", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blobstoreServiceClient) GetEntries(ctx context.Context, in *GetEntriesRequest, opts ...grpc.CallOption) (*GetEntriesResponse, error) {
	out := new(GetEntriesResponse)
	err := grpc.Invoke(ctx, "/pb.BlobstoreService/GetEntries", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blobstoreServiceClient) ReduceCache(ctx context.Context, in *ReduceCacheRequest, opts ...grpc.CallOption) (*ReduceCacheResponse, error) {
	out := new(ReduceCacheResponse)
	err := grpc.Invoke(ctx, "/pb.BlobstoreService/ReduceCache", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BlobstoreService service

type BlobstoreServiceServer interface {
	GetConfig(context.Context, *GetBlobstoreConfigRequest) (*GetBlobstoreConfigResponse, error)
	GetEntries(context.Context, *GetEntriesRequest) (*GetEntriesResponse, error)
	ReduceCache(context.Context, *ReduceCacheRequest) (*ReduceCacheResponse, error)
}

func RegisterBlobstoreServiceServer(s *grpc.Server, srv BlobstoreServiceServer) {
	s.RegisterService(&_BlobstoreService_serviceDesc, srv)
}

func _BlobstoreService_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlobstoreConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlobstoreServiceServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlobstoreService/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlobstoreServiceServer).GetConfig(ctx, req.(*GetBlobstoreConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlobstoreService_GetEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEntriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlobstoreServiceServer).GetEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlobstoreService/GetEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlobstoreServiceServer).GetEntries(ctx, req.(*GetEntriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlobstoreService_ReduceCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReduceCacheRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlobstoreServiceServer).ReduceCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BlobstoreService/ReduceCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlobstoreServiceServer).ReduceCache(ctx, req.(*ReduceCacheRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BlobstoreService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.BlobstoreService",
	HandlerType: (*BlobstoreServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetConfig",
			Handler:    _BlobstoreService_GetConfig_Handler,
		},
		{
			MethodName: "GetEntries",
			Handler:    _BlobstoreService_GetEntries_Handler,
		},
		{
			MethodName: "ReduceCache",
			Handler:    _BlobstoreService_ReduceCache_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "otaru.proto",
}

// Client API for INodeDBService service

type INodeDBServiceClient interface {
	GetINodeDBStats(ctx context.Context, in *GetINodeDBStatsRequest, opts ...grpc.CallOption) (*GetINodeDBStatsResponse, error)
}

type iNodeDBServiceClient struct {
	cc *grpc.ClientConn
}

func NewINodeDBServiceClient(cc *grpc.ClientConn) INodeDBServiceClient {
	return &iNodeDBServiceClient{cc}
}

func (c *iNodeDBServiceClient) GetINodeDBStats(ctx context.Context, in *GetINodeDBStatsRequest, opts ...grpc.CallOption) (*GetINodeDBStatsResponse, error) {
	out := new(GetINodeDBStatsResponse)
	err := grpc.Invoke(ctx, "/pb.INodeDBService/GetINodeDBStats", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for INodeDBService service

type INodeDBServiceServer interface {
	GetINodeDBStats(context.Context, *GetINodeDBStatsRequest) (*GetINodeDBStatsResponse, error)
}

func RegisterINodeDBServiceServer(s *grpc.Server, srv INodeDBServiceServer) {
	s.RegisterService(&_INodeDBService_serviceDesc, srv)
}

func _INodeDBService_GetINodeDBStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetINodeDBStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(INodeDBServiceServer).GetINodeDBStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.INodeDBService/GetINodeDBStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(INodeDBServiceServer).GetINodeDBStats(ctx, req.(*GetINodeDBStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _INodeDBService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.INodeDBService",
	HandlerType: (*INodeDBServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetINodeDBStats",
			Handler:    _INodeDBService_GetINodeDBStats_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "otaru.proto",
}

// Client API for LoggerService service

type LoggerServiceClient interface {
	GetCategories(ctx context.Context, in *GetCategoriesRequest, opts ...grpc.CallOption) (*GetCategoriesResponse, error)
	SetCategory(ctx context.Context, in *SetCategoryRequest, opts ...grpc.CallOption) (*SetCategoryResponse, error)
	QueryLogs(ctx context.Context, in *QueryLogsRequest, opts ...grpc.CallOption) (*QueryLogsResponse, error)
	GetLatestLogEntryId(ctx context.Context, in *GetLatestLogEntryIdRequest, opts ...grpc.CallOption) (*GetLatestLogEntryIdResponse, error)
}

type loggerServiceClient struct {
	cc *grpc.ClientConn
}

func NewLoggerServiceClient(cc *grpc.ClientConn) LoggerServiceClient {
	return &loggerServiceClient{cc}
}

func (c *loggerServiceClient) GetCategories(ctx context.Context, in *GetCategoriesRequest, opts ...grpc.CallOption) (*GetCategoriesResponse, error) {
	out := new(GetCategoriesResponse)
	err := grpc.Invoke(ctx, "/pb.LoggerService/GetCategories", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loggerServiceClient) SetCategory(ctx context.Context, in *SetCategoryRequest, opts ...grpc.CallOption) (*SetCategoryResponse, error) {
	out := new(SetCategoryResponse)
	err := grpc.Invoke(ctx, "/pb.LoggerService/SetCategory", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loggerServiceClient) QueryLogs(ctx context.Context, in *QueryLogsRequest, opts ...grpc.CallOption) (*QueryLogsResponse, error) {
	out := new(QueryLogsResponse)
	err := grpc.Invoke(ctx, "/pb.LoggerService/QueryLogs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loggerServiceClient) GetLatestLogEntryId(ctx context.Context, in *GetLatestLogEntryIdRequest, opts ...grpc.CallOption) (*GetLatestLogEntryIdResponse, error) {
	out := new(GetLatestLogEntryIdResponse)
	err := grpc.Invoke(ctx, "/pb.LoggerService/GetLatestLogEntryId", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for LoggerService service

type LoggerServiceServer interface {
	GetCategories(context.Context, *GetCategoriesRequest) (*GetCategoriesResponse, error)
	SetCategory(context.Context, *SetCategoryRequest) (*SetCategoryResponse, error)
	QueryLogs(context.Context, *QueryLogsRequest) (*QueryLogsResponse, error)
	GetLatestLogEntryId(context.Context, *GetLatestLogEntryIdRequest) (*GetLatestLogEntryIdResponse, error)
}

func RegisterLoggerServiceServer(s *grpc.Server, srv LoggerServiceServer) {
	s.RegisterService(&_LoggerService_serviceDesc, srv)
}

func _LoggerService_GetCategories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCategoriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoggerServiceServer).GetCategories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.LoggerService/GetCategories",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoggerServiceServer).GetCategories(ctx, req.(*GetCategoriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoggerService_SetCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoggerServiceServer).SetCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.LoggerService/SetCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoggerServiceServer).SetCategory(ctx, req.(*SetCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoggerService_QueryLogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryLogsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoggerServiceServer).QueryLogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.LoggerService/QueryLogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoggerServiceServer).QueryLogs(ctx, req.(*QueryLogsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoggerService_GetLatestLogEntryId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLatestLogEntryIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoggerServiceServer).GetLatestLogEntryId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.LoggerService/GetLatestLogEntryId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoggerServiceServer).GetLatestLogEntryId(ctx, req.(*GetLatestLogEntryIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LoggerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.LoggerService",
	HandlerType: (*LoggerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCategories",
			Handler:    _LoggerService_GetCategories_Handler,
		},
		{
			MethodName: "SetCategory",
			Handler:    _LoggerService_SetCategory_Handler,
		},
		{
			MethodName: "QueryLogs",
			Handler:    _LoggerService_QueryLogs_Handler,
		},
		{
			MethodName: "GetLatestLogEntryId",
			Handler:    _LoggerService_GetLatestLogEntryId_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "otaru.proto",
}

// Client API for SystemInfoService service

type SystemInfoServiceClient interface {
	GetSystemInfo(ctx context.Context, in *GetSystemInfoRequest, opts ...grpc.CallOption) (*SystemInfoResponse, error)
	GetVersion(ctx context.Context, in *GetVersionRequest, opts ...grpc.CallOption) (*VersionResponse, error)
}

type systemInfoServiceClient struct {
	cc *grpc.ClientConn
}

func NewSystemInfoServiceClient(cc *grpc.ClientConn) SystemInfoServiceClient {
	return &systemInfoServiceClient{cc}
}

func (c *systemInfoServiceClient) GetSystemInfo(ctx context.Context, in *GetSystemInfoRequest, opts ...grpc.CallOption) (*SystemInfoResponse, error) {
	out := new(SystemInfoResponse)
	err := grpc.Invoke(ctx, "/pb.SystemInfoService/GetSystemInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *systemInfoServiceClient) GetVersion(ctx context.Context, in *GetVersionRequest, opts ...grpc.CallOption) (*VersionResponse, error) {
	out := new(VersionResponse)
	err := grpc.Invoke(ctx, "/pb.SystemInfoService/GetVersion", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SystemInfoService service

type SystemInfoServiceServer interface {
	GetSystemInfo(context.Context, *GetSystemInfoRequest) (*SystemInfoResponse, error)
	GetVersion(context.Context, *GetVersionRequest) (*VersionResponse, error)
}

func RegisterSystemInfoServiceServer(s *grpc.Server, srv SystemInfoServiceServer) {
	s.RegisterService(&_SystemInfoService_serviceDesc, srv)
}

func _SystemInfoService_GetSystemInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSystemInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemInfoServiceServer).GetSystemInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SystemInfoService/GetSystemInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemInfoServiceServer).GetSystemInfo(ctx, req.(*GetSystemInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SystemInfoService_GetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SystemInfoServiceServer).GetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SystemInfoService/GetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SystemInfoServiceServer).GetVersion(ctx, req.(*GetVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SystemInfoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.SystemInfoService",
	HandlerType: (*SystemInfoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSystemInfo",
			Handler:    _SystemInfoService_GetSystemInfo_Handler,
		},
		{
			MethodName: "GetVersion",
			Handler:    _SystemInfoService_GetVersion_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "otaru.proto",
}

func init() { proto.RegisterFile("otaru.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1832 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x58, 0x4f, 0x6f, 0x1c, 0x49,
	0x15, 0xd7, 0xfc, 0xf1, 0x9f, 0x79, 0xf6, 0xc4, 0x76, 0x39, 0xb6, 0xc7, 0x63, 0xc7, 0xeb, 0xed,
	0xac, 0x20, 0x18, 0xe2, 0x21, 0xe6, 0x80, 0xe4, 0x13, 0x89, 0x43, 0xbc, 0x96, 0xbc, 0xd9, 0x6c,
	0x3b, 0x0b, 0x48, 0x48, 0xdb, 0xea, 0xe9, 0xae, 0x69, 0xd7, 0xa6, 0xbb, 0x6b, 0xb6, 0xab, 0xda,
	0xc9, 0x6c, 0xb4, 0x48, 0xec, 0x95, 0x1b, 0xdc, 0x38, 0x22, 0x4e, 0x7c, 0x00, 0x24, 0x3e, 0x01,
	0x07, 0x84, 0x38, 0xc0, 0x47, 0xe0, 0x73, 0x20, 0xf4, 0x5e, 0x55, 0x8d, 0x67, 0xa6, 0xc7, 0x42,
	0x9c, 0xa6, 0xea, 0xf7, 0xaa, 0x7f, 0xef, 0x4f, 0xbd, 0x57, 0xef, 0x69, 0x60, 0x45, 0xea, 0xb0,
	0x28, 0x8f, 0x87, 0x85, 0xd4, 0x92, 0xd5, 0x87, 0xfd, 0xee, 0x7e, 0x22, 0x65, 0x92, 0xf2, 0x5e,
	0x38, 0x14, 0xbd, 0x30, 0xcf, 0xa5, 0x0e, 0xb5, 0x90, 0xb9, 0x32, 0x27, 0xba, 0x3f, 0xa0, 0x9f,
	0xe8, 0x71, 0xc2, 0xf3, 0xc7, 0xea, 0x6d, 0x98, 0x24, 0xbc, 0xe8, 0xc9, 0x21, 0x9d, 0xa8, 0x9e,
	0xf6, 0x3e, 0x82, 0x7b, 0x97, 0x42, 0xe9, 0xe7, 0xa2, 0xf0, 0xf9, 0x57, 0x25, 0x57, 0x9a, 0x31,
	0x68, 0x0e, 0x43, 0x7d, 0xdd, 0xa9, 0x1d, 0xd6, 0x1e, 0xb5, 0x7c, 0x5a, 0x7b, 0xff, 0xa9, 0xc1,
	0xda, 0xf8, 0x98, 0x1a, 0xca, 0x5c, 0x71, 0xd6, 0x83, 0x05, 0x9e, 0xeb, 0x62, 0xd4, 0xa9, 0x1d,
	0x36, 0x1e, 0xad, 0x9c, 0xec, 0x1e, 0x0f, 0xfb, 0xc7, 0x33, 0x67, 0x8e, 0x7f, 0x8a, 0x07, 0x7c,
	0x73, 0xae, 0xfb, 0x97, 0x1a, 0x2c, 0x10, 0xc0, 0xee, 0x41, 0x5d, 0xc4, 0xa4, 0xa0, 0xe9, 0xd7,
	0x45, 0x8c, 0x2a, 0xf3, 0x30, 0xe3, 0x9d, 0xba, 0x51, 0x89, 0x6b, 0xc4, 0xf4, 0x68, 0xc8, 0x3b,
	0x0d, 0x83, 0xe1, 0x1a, 0x31, 0x25, 0xbe, 0xe6, 0x9d, 0xe6, 0x61, 0xed, 0x51, 0xc3, 0xa7, 0x35,
	0x5b, 0x87, 0x46, 0x29, 0xe2, 0xce, 0xc2, 0x61, 0xed, 0x51, 0xdb, 0xc7, 0x25, 0x22, 0x89, 0x88,
	0x3b, 0x8b, 0x06, 0x49, 0x44, 0xcc, 0xf6, 0xa0, 0x35, 0xe4, 0x45, 0x16, 0x64, 0x32, 0xe6, 0x9d,
	0x25, 0xc2, 0x97, 0x11, 0xf8, 0x44, 0xc6, 0x9c, 0x3d, 0x84, 0x76, 0x26, 0x63, 0x31, 0x10, 0x3c,
	0x0e, 0xb4, 0xc8, 0x78, 0x67, 0x99, 0xd8, 0x57, 0x1d, 0xf8, 0x5a, 0x64, 0xdc, 0xfb, 0x63, 0x0d,
	0x36, 0xce, 0x0a, 0x1e, 0x6a, 0xfe, 0x42, 0xa4, 0xdc, 0x85, 0x6a, 0x0b, 0x16, 0x63, 0x51, 0x04,
	0x63, 0x5f, 0x16, 0x62, 0x51, 0x5c, 0xcc, 0x77, 0xc7, 0x9a, 0xd9, 0xa8, 0x98, 0xd9, 0xbc, 0xc3,
	0xcc, 0x85, 0xff, 0x65, 0xe6, 0xe2, 0x1c, 0x33, 0x9f, 0x03, 0x9b, 0xb4, 0xd2, 0xde, 0xd4, 0x6c,
	0xb8, 0x0f, 0x60, 0x45, 0xa8, 0x20, 0xe7, 0x6f, 0x83, 0x81, 0x48, 0x8d, 0x99, 0xcb, 0x7e, 0x4b,
	0xa8, 0x97, 0xfc, 0x2d, 0x7e, 0xe7, 0xbd, 0x84, 0xf5, 0x9f, 0x17, 0x62, 0xda, 0xd5, 0x59, 0x8e,
	0x6d, 0x58, 0x94, 0x83, 0x81, 0xe2, 0x9a, 0x3e, 0x6f, 0xfa, 0x76, 0x87, 0xbe, 0xf7, 0x65, 0x3c,
	0x22, 0x47, 0x57, 0x7d, 0x5a, 0x7b, 0x9b, 0xb0, 0x31, 0xc1, 0x67, 0x8c, 0xf2, 0xf6, 0x60, 0xf7,
	0x9c, 0xeb, 0x67, 0xa9, 0xec, 0x2b, 0x2d, 0x0b, 0x7e, 0x26, 0xf3, 0x81, 0x48, 0xac, 0x36, 0xef,
	0xcf, 0x35, 0xe8, 0xce, 0x93, 0x5a, 0x87, 0x8e, 0x60, 0xa3, 0x1f, 0x46, 0x6f, 0x78, 0x1e, 0x07,
	0x22, 0x1b, 0xa6, 0x01, 0x45, 0xdb, 0xe4, 0xeb, 0x9a, 0x15, 0x5c, 0x64, 0xc3, 0xf4, 0x25, 0x06,
	0xfe, 0x21, 0xb4, 0xdd, 0xd9, 0x41, 0x1a, 0x26, 0xca, 0xde, 0xca, 0xaa, 0x05, 0x5f, 0x20, 0xc6,
	0xbe, 0x03, 0x6b, 0x51, 0x18, 0x5d, 0xf3, 0x09, 0x3a, 0x93, 0x77, 0x6d, 0x82, 0xc7, 0x64, 0x1f,
	0xc0, 0x8a, 0x39, 0x67, 0xa8, 0x9a, 0x74, 0x06, 0x08, 0x22, 0x22, 0xef, 0x15, 0x30, 0x9f, 0xc7,
	0x65, 0xc4, 0xcf, 0x10, 0x73, 0xc1, 0xdb, 0x81, 0xa5, 0xb8, 0x18, 0x05, 0x45, 0x99, 0x93, 0x95,
	0xcb, 0xfe, 0x62, 0x5c, 0x8c, 0xfc, 0x32, 0x67, 0x1f, 0xc2, 0x6a, 0xcc, 0x95, 0x28, 0x78, 0x1c,
	0x50, 0x62, 0x1b, 0xdb, 0x56, 0x2c, 0x76, 0x25, 0xbe, 0xe6, 0xde, 0x6b, 0xd8, 0x9c, 0x62, 0xb4,
	0x21, 0xe8, 0xc0, 0x92, 0x2a, 0xa3, 0x88, 0x2b, 0x65, 0x29, 0xdd, 0x16, 0x1d, 0xe6, 0x45, 0x21,
	0x8b, 0x20, 0xe3, 0x4a, 0x85, 0x89, 0x23, 0x5d, 0x25, 0xf0, 0x13, 0x83, 0xe1, 0x95, 0x9c, 0x73,
	0x8d, 0xd5, 0x28, 0xb8, 0x72, 0x51, 0xff, 0x7d, 0x03, 0xd8, 0x24, 0x6a, 0x55, 0x9d, 0x4c, 0x17,
	0xfa, 0x3e, 0x16, 0x7a, 0xf5, 0xd8, 0x74, 0xad, 0xff, 0xa3, 0xee, 0x6a, 0x7d, 0x0f, 0x5a, 0xfd,
	0x54, 0xf6, 0x83, 0x89, 0x37, 0x65, 0x19, 0x81, 0x57, 0xa1, 0xbe, 0x66, 0xf7, 0x61, 0x41, 0xe9,
	0x50, 0x3b, 0x1b, 0xcd, 0x86, 0xed, 0x02, 0x9d, 0x08, 0x52, 0x9e, 0xd3, 0x35, 0x34, 0xfc, 0x25,
	0xdc, 0x5f, 0xf2, 0x1c, 0xd9, 0x6e, 0xc2, 0x54, 0xc4, 0x24, 0x33, 0xcf, 0xc0, 0x32, 0x01, 0x28,
	0x7c, 0x00, 0xa0, 0x46, 0x79, 0x14, 0x44, 0xb2, 0xcc, 0x35, 0x15, 0x50, 0xc3, 0x6f, 0x21, 0x72,
	0x86, 0x00, 0x7e, 0x9b, 0x86, 0x4a, 0x07, 0xa5, 0xe2, 0xb1, 0xad, 0x9e, 0x65, 0x04, 0x3e, 0x57,
	0x3c, 0xc6, 0x6f, 0x49, 0xf8, 0x16, 0x13, 0x95, 0xde, 0x88, 0x86, 0x4f, 0xc7, 0x29, 0x73, 0xc7,
	0xdf, 0x22, 0x9b, 0x7d, 0x20, 0xe8, 0xdb, 0xab, 0x51, 0x1e, 0xb1, 0x1f, 0x43, 0x27, 0x2f, 0xb3,
	0x3e, 0x2f, 0x02, 0x39, 0x30, 0x04, 0x45, 0x70, 0x1d, 0xe6, 0x71, 0xca, 0x55, 0xa7, 0x45, 0x67,
	0xb7, 0x8c, 0xfc, 0xd3, 0x01, 0xb1, 0x15, 0x1f, 0x1b, 0x21, 0xe6, 0xf1, 0xed, 0x87, 0xee, 0x0b,
	0xa0, 0x2f, 0xd6, 0xdc, 0x17, 0xf6, 0xac, 0xd7, 0x81, 0xed, 0x73, 0xae, 0x2f, 0x5e, 0xca, 0x98,
	0x3f, 0x7f, 0x76, 0xa5, 0x43, 0x3d, 0xbe, 0xb6, 0x7f, 0xd5, 0x60, 0xa7, 0x22, 0xb2, 0x77, 0x37,
	0x65, 0x77, 0x6d, 0xc6, 0xee, 0x1d, 0x58, 0x22, 0xa1, 0x7e, 0x47, 0xf1, 0x6f, 0xf8, 0x8b, 0xb8,
	0x7d, 0xfd, 0x6e, 0x2c, 0xb0, 0x0f, 0x56, 0xd3, 0x08, 0x2e, 0x62, 0xcc, 0xba, 0x1b, 0x5e, 0x28,
	0x21, 0x4d, 0xf0, 0x9b, 0xbe, 0xdb, 0x62, 0x65, 0x18, 0x2e, 0x11, 0xbd, 0xe1, 0x26, 0xf8, 0x4d,
	0x9f, 0x42, 0xfa, 0x9a, 0x10, 0xd6, 0x83, 0xfb, 0xb7, 0xbe, 0xe6, 0x32, 0xe6, 0x41, 0x2a, 0xa3,
	0x37, 0xca, 0x3e, 0xd3, 0x1b, 0xce, 0x5d, 0x74, 0xe2, 0x12, 0x05, 0xde, 0x36, 0xdc, 0x3f, 0xe7,
	0xfa, 0x2c, 0xd4, 0x3c, 0x91, 0x93, 0x59, 0xfa, 0x0c, 0xee, 0x5d, 0x4a, 0xec, 0x6a, 0x56, 0x34,
	0x62, 0x5d, 0x58, 0x8e, 0xec, 0xda, 0x65, 0x98, 0xdb, 0x63, 0x86, 0xa5, 0xfc, 0x86, 0xa7, 0xe4,
	0x61, 0xdb, 0x37, 0x1b, 0xef, 0x1c, 0xb6, 0x66, 0xb8, 0x6d, 0xbc, 0x8e, 0xa7, 0xa8, 0x30, 0xdd,
	0x19, 0xf5, 0xb5, 0x29, 0x85, 0xb7, 0xf4, 0xde, 0x0b, 0x60, 0x57, 0x63, 0xa2, 0x91, 0xab, 0xf7,
	0xff, 0xdf, 0xa0, 0x2d, 0xd8, 0x9c, 0xe2, 0xb1, 0x8f, 0xe4, 0x2f, 0x61, 0xfd, 0xb3, 0x92, 0x17,
	0xa3, 0x4b, 0x99, 0xa8, 0x89, 0xa6, 0x93, 0x89, 0xdc, 0x35, 0x9d, 0xb6, 0xbf, 0x90, 0x89, 0xfc,
	0x22, 0x9e, 0xd2, 0x59, 0x3f, 0x6c, 0x54, 0x74, 0x8a, 0x4c, 0x68, 0xdb, 0x7e, 0xcc, 0x06, 0xf3,
	0x66, 0x63, 0x82, 0xdd, 0x46, 0xe0, 0xc9, 0x74, 0xb5, 0xef, 0xa1, 0xfb, 0x95, 0x53, 0xd3, 0xc5,
	0xfe, 0x9b, 0x39, 0x8d, 0xbd, 0x4d, 0x5d, 0x62, 0x1d, 0x1a, 0xa9, 0x4c, 0x6c, 0x75, 0xe3, 0x72,
	0xca, 0xcc, 0xc6, 0x5d, 0xa1, 0x69, 0x4e, 0x84, 0x86, 0x06, 0x01, 0xec, 0x77, 0xa6, 0x9e, 0x69,
	0x8d, 0x2c, 0xa9, 0x8c, 0x68, 0x90, 0xa1, 0x04, 0x6a, 0xf9, 0xe3, 0xbd, 0xb7, 0x4f, 0xad, 0xe3,
	0x32, 0xd4, 0x5c, 0xe9, 0x4b, 0x99, 0x90, 0x61, 0x17, 0xb1, 0xcb, 0x9e, 0xc7, 0xb0, 0x37, 0x57,
	0x5a, 0x69, 0x95, 0xe4, 0x80, 0x4d, 0xc2, 0xab, 0x91, 0xd2, 0x3c, 0xbb, 0xc8, 0x07, 0xd2, 0xd1,
	0xfc, 0xa1, 0x0e, 0x6c, 0x12, 0xb5, 0x9f, 0x3f, 0x00, 0x48, 0x64, 0xe0, 0x4a, 0xc4, 0x5c, 0x7d,
	0x2b, 0x91, 0x3f, 0xb3, 0x45, 0x72, 0x0f, 0xea, 0xd2, 0x35, 0xa0, 0xba, 0x54, 0xe8, 0x5a, 0x58,
	0x44, 0xd7, 0x6e, 0xc6, 0xc1, 0x35, 0x3e, 0xdf, 0x79, 0x99, 0x05, 0x89, 0x2c, 0x64, 0xa9, 0x45,
	0xce, 0x6d, 0x30, 0x56, 0xf3, 0x32, 0x3b, 0x77, 0x18, 0xfa, 0x7f, 0x2d, 0x95, 0xa6, 0x46, 0xb5,
	0x60, 0xfc, 0x77, 0x7b, 0x8c, 0xf9, 0xd0, 0x8e, 0x3f, 0x4d, 0x1f, 0x97, 0x6e, 0xf6, 0x58, 0x32,
	0x48, 0x69, 0x26, 0x8d, 0x8c, 0x67, 0x41, 0x98, 0xa6, 0xd2, 0x3c, 0x67, 0x4d, 0x7f, 0x39, 0xe3,
	0xd9, 0x53, 0xdc, 0x63, 0xf5, 0xa3, 0x50, 0x8d, 0xcc, 0xeb, 0xd5, 0xf4, 0x17, 0x33, 0x9e, 0x5d,
	0x8d, 0x14, 0x66, 0x1e, 0x99, 0x16, 0xd1, 0x1b, 0xd5, 0xf6, 0x17, 0xd0, 0x26, 0x3a, 0x8f, 0xf0,
	0x20, 0x56, 0x9d, 0x15, 0xc2, 0xf1, 0xd4, 0x8b, 0x58, 0xd9, 0x26, 0x63, 0x9d, 0x77, 0x91, 0xcb,
	0x61, 0x6d, 0x8c, 0x4c, 0x44, 0x4d, 0xe8, 0x20, 0x92, 0x19, 0xe6, 0xa8, 0x8b, 0x9a, 0xd0, 0x67,
	0x04, 0xa0, 0xb8, 0x5f, 0x8a, 0x34, 0x0e, 0xd0, 0x45, 0x1b, 0xbd, 0x16, 0x21, 0x1f, 0x4b, 0x35,
	0x21, 0xa6, 0x2c, 0x69, 0x4c, 0x88, 0x71, 0x24, 0x3a, 0xf9, 0x53, 0x1d, 0x36, 0x70, 0xf0, 0x30,
	0xb7, 0x75, 0xc5, 0x8b, 0x1b, 0x11, 0x71, 0xf6, 0x19, 0x2c, 0xd9, 0x59, 0x95, 0xb1, 0xa9, 0xc1,
	0x95, 0x8c, 0xec, 0x6e, 0xce, 0x19, 0x66, 0xbd, 0x07, 0xdf, 0xfe, 0xf3, 0xdf, 0xbf, 0xab, 0xef,
	0xb0, 0x2d, 0x1a, 0xbc, 0x6f, 0x9e, 0xf4, 0x70, 0x7a, 0x52, 0x44, 0xdb, 0x4b, 0x15, 0x0b, 0x00,
	0x6e, 0x67, 0x2f, 0xb6, 0x85, 0x0c, 0x95, 0x89, 0xb1, 0xbb, 0x3d, 0x0b, 0x5b, 0x6e, 0x8f, 0xb8,
	0xf7, 0xbd, 0x9d, 0x39, 0xdc, 0xb8, 0x3c, 0xad, 0x1d, 0xb1, 0x10, 0x5a, 0xe3, 0x31, 0x8a, 0xdd,
	0x47, 0xa2, 0xd9, 0x29, 0xad, 0xbb, 0x35, 0x83, 0x5a, 0xf6, 0xef, 0x12, 0xfb, 0x87, 0xdd, 0xfd,
	0x3b, 0xd8, 0x7b, 0xef, 0x45, 0xfc, 0xcd, 0x69, 0xed, 0xe8, 0xe4, 0x6f, 0x75, 0x58, 0x1f, 0x0f,
	0x5d, 0x2e, 0x56, 0x29, 0xb4, 0xf0, 0xb1, 0xa4, 0x11, 0x8c, 0x3d, 0xb0, 0xdd, 0x7f, 0xfe, 0xe0,
	0xd6, 0x3d, 0xb8, 0x4b, 0x6c, 0x2d, 0x39, 0x24, 0x4b, 0xba, 0xac, 0xe3, 0x2c, 0xe9, 0xbb, 0x83,
	0xbd, 0xc8, 0x28, 0xf8, 0x02, 0xe0, 0x76, 0xb8, 0x30, 0x61, 0xac, 0x4c, 0x2a, 0x26, 0x8c, 0xd5,
	0x19, 0xc4, 0xfb, 0x90, 0xe8, 0xf7, 0xd8, 0x6e, 0x95, 0x9e, 0x5b, 0x46, 0x01, 0x2b, 0x13, 0xf3,
	0x14, 0x23, 0xa6, 0xea, 0xc8, 0xd6, 0xdd, 0xa9, 0xe0, 0x56, 0xc5, 0xf7, 0x48, 0xc5, 0x43, 0xef,
	0xa0, 0xaa, 0xa2, 0xa0, 0xe3, 0x01, 0x8d, 0x83, 0x18, 0xcd, 0xf7, 0x70, 0xcf, 0x35, 0x65, 0x1b,
	0x4a, 0x01, 0x6b, 0x33, 0x9d, 0x9a, 0x75, 0xad, 0x2b, 0x73, 0x3a, 0x7b, 0x77, 0x6f, 0xae, 0xec,
	0xae, 0x74, 0x14, 0xd8, 0x55, 0xe3, 0x7e, 0x0f, 0x87, 0x28, 0x75, 0xf2, 0xd7, 0x06, 0xb4, 0x4d,
	0xdb, 0x72, 0xca, 0x13, 0x68, 0x4f, 0x35, 0x3d, 0xd6, 0xb1, 0xf4, 0x95, 0x1e, 0xdb, 0xdd, 0x9d,
	0x23, 0xb9, 0x2b, 0xc4, 0x29, 0x29, 0xe9, 0x45, 0xb7, 0xbc, 0x5f, 0xc1, 0xca, 0x44, 0x33, 0x33,
	0x21, 0xae, 0x76, 0x49, 0x13, 0xe2, 0x79, 0x5d, 0xef, 0x09, 0xa9, 0xf8, 0xbe, 0xe7, 0xcd, 0x57,
	0x31, 0xea, 0xbd, 0x77, 0xab, 0x6f, 0x4e, 0x6d, 0x93, 0xf8, 0x1c, 0x5a, 0xe3, 0x26, 0x65, 0x6a,
	0x63, 0xb6, 0x6f, 0x9a, 0xda, 0xa8, 0x74, 0x32, 0x6f, 0x8f, 0x94, 0x6d, 0xb1, 0xcd, 0x19, 0x65,
	0x29, 0x32, 0x7d, 0x5b, 0x83, 0xcd, 0x39, 0xed, 0x82, 0xb9, 0x34, 0xbf, 0xa3, 0xcb, 0x74, 0x3f,
	0xb8, 0x53, 0x6e, 0xb5, 0x1e, 0x91, 0xd6, 0x8f, 0xd8, 0xac, 0x8b, 0x29, 0x7d, 0x10, 0xa4, 0x32,
	0x09, 0xa8, 0xb7, 0x06, 0x22, 0x3e, 0xf9, 0x7b, 0x0d, 0x36, 0x6e, 0x7b, 0x8d, 0xbb, 0xcd, 0x2f,
	0xe8, 0x36, 0x6f, 0xf1, 0xf1, 0x6d, 0x56, 0x9a, 0x95, 0xa9, 0x96, 0x6a, 0xb7, 0xaa, 0xba, 0x6e,
	0x9f, 0x04, 0x81, 0x74, 0xbf, 0xa0, 0x3a, 0x74, 0x9d, 0xcb, 0xd5, 0xe1, 0xf4, 0x63, 0x6e, 0xde,
	0xc9, 0x99, 0xe7, 0xdc, 0x3b, 0x20, 0xda, 0x0e, 0xdb, 0x9e, 0xa1, 0xb5, 0x6d, 0xf1, 0xd9, 0xaf,
	0x6b, 0xbf, 0x7d, 0xfa, 0x2b, 0xbc, 0xb1, 0x4f, 0x75, 0x58, 0x94, 0x87, 0x4f, 0x5f, 0x5d, 0x78,
	0x67, 0xd0, 0x36, 0x9b, 0x61, 0x21, 0xbf, 0xe4, 0x91, 0x66, 0x07, 0xd7, 0x5a, 0x0f, 0xd5, 0x69,
	0xaf, 0x97, 0x08, 0x7d, 0x5d, 0xf6, 0x8f, 0x23, 0x99, 0xf5, 0xf2, 0x51, 0xf8, 0x4e, 0xf7, 0xe8,
	0xcf, 0x90, 0x2e, 0x2b, 0x79, 0x2e, 0x7f, 0x42, 0x88, 0xd2, 0x7c, 0x88, 0xf2, 0x93, 0xc6, 0x93,
	0xe3, 0x1f, 0x1e, 0xd5, 0xea, 0x27, 0xeb, 0xe1, 0x70, 0x98, 0x0a, 0x33, 0x0d, 0xf4, 0xbe, 0x54,
	0x32, 0x3f, 0xad, 0x20, 0xfd, 0x45, 0xfa, 0xf7, 0xe3, 0x47, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff,
	0x34, 0x17, 0xfa, 0xba, 0x5c, 0x11, 0x00, 0x00,
}
